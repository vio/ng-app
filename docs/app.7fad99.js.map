{"version":3,"sources":["webpack:///./src/inputs/shared/controller.ts","webpack:///./src/inputs/radio-list.ts","webpack:///./src/logger.ts","webpack:///./src/inputs/text-input.ts","webpack:///./src/inputs/index.ts","webpack:///./src/inputs/shared/index.ts","webpack:///./docs/src/app.ts","webpack:///./src/app.ts","webpack:///./src/inputs/date-input.ts","webpack:///./src/modal.ts","webpack:///./src/http.ts","webpack:///./src/misc/app-spinner.ts","webpack:///./src/misc/index.ts","webpack:///./src/attributes.ts","webpack:///./src/inputs/check-box.ts","webpack:///./src/router.ts","webpack:///./src/inputs/shared/service.ts","webpack:///./src/renderer.ts","webpack:///./src/inputs/text-box.ts","webpack:///./src/inputs/select-list.ts","webpack:///./index.ts","webpack:///./src/service.ts","webpack:///./src/ng.ts","webpack:///./src/controller.ts","webpack:///./src/options.ts"],"names":["NgInputController","super","setTimeout","$contain","this","$element","querySelector","children","length","isIE11","removeNode","remove","$scope","$watchCollection","ngModel","curr","prev","ngModelCtrl","$setViewValue","Object","keys","$validators","every","x","$commitViewValue","RadioListController","$attrs","hasOwnProperty","fieldset","closest","legend","span","document","createElement","classList","add","innerText","appendChild","radioList","type","templateClass","labelClass","h","radio","createInput","value","setAttribute","style","setProperty","$template","text","labelText","createTextNode","$label","bindings","list","ngChecked","controller","LogTypeToastBackgrounds","NgToast","$renderer","options","toast","createHtmlElement","toastBody","toastHeader","toastHeaderTimestamp","setBodyText","setType","container","el","innerHTML","timeout","targets","translateX","duration","easing","begin","Date","toLocaleTimeString","navigator","language","replace","Promise","resolve","hideAnimation","autoplay","complete","removeEventListener","play","resetAnimationOnMouseover","resumeAnimationOnMouseout","isAutoClose","Number","isInteger","makeTimeout","autoCloseId","undefined","wasClosing","progress","clearTimeout","restart","pause","addEventListener","click","parentElement","removeChild","NgConsole","items","console","debug","error","info","warn","log","$log","NgLogger","isProd","toasts","body","forEach","hide","msg","okBtn","cancelBtn","footer","notify","reject","removeListeners","ok","cancel","isTemporary","warning","show","then","index","findIndex","is","splice","push","TextInputController","minlength","minVal","val","min","maxVal","max","pattern","validators","textInput","canHaveIcon","attrs","maxlength","placeholder","input","isRange","textContent","step","htmlInput","inputs","checkBox","dateInput","selectList","textBox","ModalController","title","AppController","modal","open","template","confirm","success","catch","module","makeComponentController","configure","API_HOST","bootstrap","NgApp","$id","$injector","$dependencies","$module","$bootstrap","$components","Map","$httpInterceptors","config","$compileProvider","$locationProvider","$qProvider","IS_DEV","IS_STAGING","$config","debugInfoEnabled","commentDirectivesEnabled","cssClassDirectivesEnabled","html5Mode","errorOnUnhandledRejections","$stateProvider","router","$warn","definition","getRoutes","state","run","$animate","enabled","$router","Set","get","_http","$http","IS_PROD","getConfig","_log","$logger","_modal","$modal","_renderer","$applyAsync","strictDi","name","component","components","entries","isInputComponent","defineInputComponent","set","moduleName","moduleNames","addDependency","interceptor","ctrl","http","renderer","onFinally","forceUpdate","Array","isArray","interceptors","addHttpInterceptor","isNumber","n","DateInputController","SUPPORTED_MODES","minDate","modelVal","valueOf","maxDate","inline","mode","includes","devWarning","id","join","flatpickr","dateFormat","defaultDate","nextArrow","prevArrow","allowInput","weekNumbers","wrap","enable","d","parse","isNaN","onChange","selected","destroy","toLocaleDateString","removeAttribute","iconInput","createIconInput","inputGroupAppend","inputGroupText","clearIcon","createIcon","MODAL_SHOW_DELAY","MODAL_HIDE_DELAY","NgModal","$compile","$rootScope","backdrop","uniqueId","headerCloseButton","header","content","footerCancelButton","footerOkButton","dialog","onClose","defaultCancelBtnText","defaultOkBtnText","cancelBtnText","okBtnText","$new","$ctrl","escapeKeyListener","e","key","close","dismiss","removeEventListeners","hideModal","showModal","call","window","scope","$destroy","DEFAULT_REQUEST_TIMEOUT","NgHttp","request","map","filter","response","responseError","url","fetch","data","uri","host","ssl","URL","toJSON","method","Response","location","protocol","cache","credentials","headers","integrity","keepalive","redirect","referrerPolicy","getFullUrl","abortCtrl","AbortController","Request","signal","JSON","stringify","onRequest","abortTimer","abort","json","onResponse","Error","err","onResponseError","clone","colors","color","srDesc","spinner","appSpinner","misc","NgAttributes","$$element","$attr","PREFIX_REGEXP","SPECIAL_CHARS_REGEXP","from","attributes","$record","_","letter","offset","toUpperCase","className","contains","$hasClass","newClasses","oldClasses","nu","split","old","o","$removeClass","$addClass","__","normalized","$normalize","NgRouter","routes","partial","generateRouteMeta","isNgTransitionFn","onEnter","onExit","onRetain","param","decode","parseInt","encode","toString","a","b","item","resolveFn","params","parent","isBase","toLowerCase","BaseComponent","seal","isRadioOrCheckbox","_h","$transclude","createSlot","InputService","getDefaultLabelText","ValidationExpressions","$Error","$Invalid","$Touched","$FormInvalid","pop","modelIdentifier","charAt","substring","$input","tagName","$component","$BaseComponent","$definition","$baseDefinition","assign","transclude","$el","render","isRadio","isRequired","isSrOnly","createLabel","icon","marginTop","requiredTag","firstElementChild","renderLabel","postRender","$inputInput","getInputInput","$validationAttrs","s","startsWith","$ValidationExpressions","$IsInvalid","$validationBlock","$validationMessages","$html","concat","has","$message","$newTpl","outerHTML","prop","RegExp","contain","require","ngModelOptions","ngDisabled","ngReadonly","ngRequired","NgRenderer","baseInputAttrs","create","classes","$isRange","$isRadio","$isCheckbox","$class","$inputAttrs","shift","isFixedWidth","$iconClasses","$span","inputGroupAttrs","$inputGroup","$inputGroupPrepend","$inputGroupText","$icon","createComment","newChild","refChild","insertBefore","important","removeProperty","node","nodeValue","parentNode","nextSibling","selectorOrNode","preserveContent","target","eventName","callback","DEFAULT_MAX_HEIGHT","TextBoxController","$mirror","element","computedStyle","getComputedStyle","boxOuter","width","getPropertyValue","height","minHeightValue","heightValue","minHeight","Math","maxHeight","mirror","adjust","requestAnimationFrame","scrollHeight","overflow","$on","styles","textArea","createTextArea","SelectController","isListOpen","IsMultiple","MultiplePlaceholder","SinglePlaceholder","_text","_value","isMobile","searchList","dropdown","dropdownlist","updateSearchList","getSearchList","fuzzer","search","oninput","onblur","relatedTarget","hidden","onclick","HTMLSelectElement","HTMLButtonElement","toggle","focus","nodeName","HTMLDivElement","select","dataset","shouldSort","threshold","distance","maxPatternLength","minMatchCharLength","destroyCurrentWatcher","GetPlaceholder","find","clear","isMultiple","y","IsMobile","inner","innerlist","btn","sbtn","cloneNode","app","addComponents","addDependencies","status","statusText","NotFound","BadRequest","Unauthorized","Forbidden","InternalServerError","NgService","UUIDv4","c","r","random","IsIE11","trim","first","second","rest","NgController","address","makeInjectableCtrl","locals","$state","NgAppConfig","NAME","ENV","Partial"],"mappings":"6FAAA,uEAIO,MAAMA,UAAmC,IAI/C,cACCC,QAEAC,WAAW,KACV,MAAMC,EAAWC,KAAKC,SAASC,cAAc,6BAC7B,MAAZH,GAAiD,IAA7BA,EAASI,SAASC,SACrCJ,KAAKK,OACPN,EAAiBO,YAAW,GAE7BP,EAASQ,UAIXP,KAAKQ,OAAOC,iBACX,IAAMT,KAAKU,QACX,CAACC,EAAWC,KACX,GAAI,IAAQD,EAAMC,GACjB,OAGDZ,KAAKa,YAAYC,cAAcH,GACfI,OACdC,KAAKhB,KAAKa,YAAYI,aACtBC,MAAMC,GACCnB,KAAKa,YAAYI,YAAYE,GAAGR,EAAMA,KAG9CX,KAAKa,YAAYO,0B,qFCnCvB,kDAEA,MAAMC,UAA4B,oBAC1B,YACNvB,WAAW,KACV,GAAIE,KAAKsB,OAAOC,eAAe,YAAa,CAC3C,MAAMC,EAAWxB,KAAKC,SAASwB,QAAQ,YAEvC,GAAgB,MAAZD,EAAkB,CACrB,MAAME,EAASF,EAAStB,cAAc,UAEtC,GAAc,MAAVwB,EAAgB,CACnB,MAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAUC,IAAI,eACnBJ,EAAKK,UAAY,KACjBN,EAAOO,YAAYN,SAQlB,MAAMO,EAA4B,CACxCC,KAAM,QACNC,cAAe,aACfC,WAAY,mBACZ,OAAOC,GACN,MAAMC,EAAQD,EAAEE,YAAY,UACtB,MAAEC,EAAQ,SAAYzC,KAAKsB,OAajC,OAXAiB,EAAMG,aAAa,WAAY,QAAQD,KACvCF,EAAMG,aAAa,aAAc,wCACjCH,EAAMI,MAAMC,YAAY,SAAU,WAE9B5C,KAAKsB,OAAOC,eAAe,YAC9BvB,KAAK6C,UAAUf,UAAUvB,OAAO,cAChCP,KAAK6C,UAAUf,UAAUC,IAAI,sBAG9B/B,KAAK6C,UAAUH,aAAa,YAAa,sCAElCH,GAER,cACC,MAAM,KAAEO,EAAO,QAAW9C,KAAKsB,OACzByB,EAAYnB,SAASoB,eAAe,UAAUF,OAEpD9C,KAAKiD,OAAOhB,YAAYc,GACxB/C,KAAKiD,OAAOP,aAAa,cAAe,yCAEzCQ,SAAU,CACTC,KAAM,IACNC,UAAW,KAEZC,WAAYhC,I,oCCtDb,sCAKKiC,EALL,yBAKA,SAAKA,GACJ,eACA,qBACA,eACA,kBACA,kBALD,CAAKA,MAAuB,KAQrB,MAAMC,EAOZ,YAA+BC,EAAuBC,GAAvB,KAAAD,YAK9BxD,KAAK0D,MAAQ1D,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,QAAS,MAAO,0BAA2B,SAAU,CAAC,CAAC,OAAQ,SAAU,CAAC,YAAa,aAAc,CAAC,cAAe,UAC3K3D,KAAK0D,MAAMf,MAAMC,YAAY,SAAU,WAEvC5C,KAAK4D,UAAY5D,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,aAAc,KAAM,MAAO,OAAQ,SAC7F3D,KAAK6D,YAAc7D,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,iBAC5D3D,KAAK6D,YAAYlB,MAAMC,YAAY,gBAAiB,QAEpD5C,KAAK8D,qBAAuB9D,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,cAExE3D,KAAK6D,YAAY5B,YAAYjC,KAAK8D,sBAClC9D,KAAK0D,MAAMzB,YAAYjC,KAAK6D,aAC5B7D,KAAK0D,MAAMzB,YAAYjC,KAAK4D,WAE5B5D,KAAK+D,YAAYN,EAAQX,MACzB9C,KAAKgE,QAAQP,EAAQtB,MAErBsB,EAAQQ,UAAUhC,YAAYjC,KAAK0D,OAQ7B,YAAYQ,GAElB,OADAlE,KAAK0D,MAAMzB,YAAYiC,GAChBlE,KAQD,YAAY8C,GAClB9C,KAAK4D,UAAUO,UAAYrB,EAQrB,QAAQX,GACG,MAAbnC,KAAKmC,MACRnC,KAAK0D,MAAM5B,UAAUvB,OAAO,MAAM+C,EAAwBtD,KAAKmC,SAGhEnC,KAAKmC,KAAOA,EACZnC,KAAK0D,MAAM5B,UAAUC,IAAI,MAAMuB,EAAwBtD,KAAKmC,SAE/C,SAATA,GACHnC,KAAK6D,YAAY/B,UAAUC,IAAI,WAC/B/B,KAAK6D,YAAYlB,MAAMC,YAAY,UAAW,QAC9C5C,KAAK8D,qBAAqBhC,UAAUvB,OAAO,aAC3CP,KAAK8D,qBAAqBhC,UAAUC,IAAI,eACrB,UAATI,GACVnC,KAAK0D,MAAM5B,UAAUC,IAAI,cAUpB,KAAKqC,EAAyBH,GAiBpC,OAhBiB,MAAbA,IACHjE,KAAKO,SACL0D,EAAUhC,YAAYjC,KAAK0D,QAG5B,YAAM,CACLW,QAASrE,KAAK0D,MACdY,WAAY,CAAC,IAAK,GAClBC,SAAU,IACVC,OAAQ,uBACRC,MAAO,KACNzE,KAAK8D,qBAAqB9B,WAAY,IAAI0C,MAAOC,mBAAmBC,UAAUC,UAAUC,QAAQ,uBAAwB,IACxH9E,KAAK0D,MAAMf,MAAMC,YAAY,UAAW,QAInC,IAAImC,QAAQC,IAClB,MAAMC,EAAgB,YAAM,CAC3BZ,QAASrE,KAAK0D,MACdY,WAAY,CAAC,EAAG,KAChBC,SAAU,IACVW,UAAU,EACVV,OAAQ,sBACRW,SAAU,KACTnF,KAAK0D,MAAM0B,oBAAoB,QAASH,EAAcI,MACtDrF,KAAK0D,MAAM0B,oBAAoB,YAAaE,GAC5CtF,KAAK0D,MAAM0B,oBAAoB,WAAYG,GAC3CvF,KAAKO,SACLyE,OAIIQ,EAAiC,iBAAZpB,GAAwBqB,OAAOC,UAAUtB,GAC9DuB,EAAc,IAAO7F,WAA2CmF,EAAcI,KAAMjB,GAE1F,IAAIwB,EAAcJ,EAAcG,SAAgBE,EAC5CC,GAAa,EAEjB,MAAMR,EAA4B,KACjCQ,EAAab,EAAcc,SAAW,EAEtCC,aAAaJ,GACbA,OAAcC,EAEdZ,EAAcgB,UACdhB,EAAciB,SAGTX,EAA4B,KAC7BO,EACHb,EAAcI,OACJG,QAA+BK,IAAhBD,IACzBA,EAAcD,MAIhB3F,KAAK0D,MAAMyC,iBAAiB,QAASlB,EAAcI,MACnDrF,KAAK0D,MAAMyC,iBAAiB,YAAab,GACzCtF,KAAK0D,MAAMyC,iBAAiB,WAAYZ,KAOnC,OACNvF,KAAK0D,MAAM0C,QAML,SAC0B,MAA5BpG,KAAK0D,MAAM2C,eACdrG,KAAK0D,MAAM2C,cAAcC,YAAYtG,KAAK0D,QAMtC,MAAM6C,UAAkB,IAMvB,UAAUC,GAChBC,QAAQC,SAASF,GAQX,UAAUA,GAChBC,QAAQE,SAASH,GAQX,SAASA,GACfC,QAAQG,QAAQJ,GAQV,SAASA,GACfC,QAAQI,QAAQL,GAQV,QAAQA,GACdC,QAAQK,OAAON,GAQT,YAAYA,GAClBxG,KAAK+G,QAAQP,IAKR,MAAMQ,UAAiBT,EAI7B,YAAoB/C,EAA+ByD,GAAS,GAC3DpH,QADmB,KAAA2D,YAA+B,KAAAyD,SAFhC,KAAAC,OAAoB,GAKtClH,KAAKiE,UAAYjE,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,mBAC1D3D,KAAKiE,UAAUtB,MAAMC,YAAY,MAAO,UACxC5C,KAAKiE,UAAUtB,MAAMC,YAAY,QAAS,WAC1C5C,KAAKiE,UAAUtB,MAAMC,YAAY,QAAS,QAC1C5C,KAAKiE,UAAUtB,MAAMC,YAAY,YAAa,SAE9ChB,SAASuF,KAAKlF,YAAYjC,KAAKiE,WAMzB,QACNjE,KAAKkH,OAAOE,QAAQjG,GAAKA,EAAEkG,QAQrB,QAAQC,EAAM,8BACpB,MAAMC,EAAQvH,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,MAAO,OAAQ,cAAe,cACxF4D,EAAMvF,UAAY,MAClB,MAAMwF,EAAYxH,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,MAAO,OAAQ,WAAY,cACzF6D,EAAUxF,UAAY,KAEtB,MAAMyF,EAASzH,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,UACxD8D,EAAOxF,YAAYuF,GACnBC,EAAOxF,YAAYsF,GAEnB,MAAM7D,EAAQ1D,KAAK0H,OAAOJ,EAAK,QAAQ,GAGvC,OAFA5D,EAAMzB,YAAYwF,GAEX,IAAI1C,QAAQ,CAACC,EAAS2C,KAC5B,MAAMC,EAAkB,KACvBL,EAAMnC,oBAAoB,QAASyC,GACnCL,EAAUpC,oBAAoB,QAAS0C,IAGlCD,EAAK,KACVnE,EAAM2D,OACNO,IACA5C,KAGK8C,EAAS,KACdpE,EAAM2D,OACNO,IACAD,KAGDJ,EAAMpB,iBAAiB,QAAS0B,GAChCL,EAAUrB,iBAAiB,QAAS2B,KAU/B,MAAMhF,EAAciF,GAAc,GACxC/H,KAAK0H,OAAO5E,EAAM,SAAUiF,QAAelC,GASrC,KAAK/C,EAAciF,GAAc,GACvC/H,KAAK0H,OAAO5E,EAAM,QAASiF,QAAelC,GASpC,QAAQ/C,EAAciF,GAAc,GAC1C/H,KAAK0H,OAAO5E,EAAM,WAAYiF,QAAelC,GASvC,QAAQ/C,EAAciF,GAAc,GAC1C/H,KAAK0H,OAAO5E,EAAM,QAASiF,QAAelC,GAQpC,WAAW/C,IACG,IAAhB9C,KAAKiH,QACRjH,KAAKgI,QAAQ,SAASlF,KAAQ,GAYzB,OAAOA,EAAcX,EAAeiC,EAA0B,MACpEpE,KAAKmC,GAAM,GAAGA,MAASW,KAEvB,MAAMY,EAAQ,IAAIH,EAAQvD,KAAKwD,UAAW,CAAEV,OAAMX,OAAM8B,UAAWjE,KAAKiE,YAOxE,OANAP,EAAMuE,KAAK7D,GAAS8D,KAAK,KACxB,MAAMC,EAAQnI,KAAKkH,OAAOkB,UAAUjH,GAAKJ,OAAOsH,GAAGlH,EAAGuC,IACtD1D,KAAKkH,OAAOoB,OAAOH,EAAO,KAG3BnI,KAAKkH,OAAOqB,KAAK7E,GACVA,K,oCC3WT,oFAEA,MAAM8E,UAA4B,oBAI1B,UACN,MAAM,KAAErG,EAAI,UAAEsG,GAAczI,KAAKsB,OAEpB,WAATa,IACHnC,KAAKa,YAAYI,YAAYyH,OAASC,GAClB,MAAZ3I,KAAK4I,KAAeD,GAAO3I,KAAK4I,IAExC5I,KAAKa,YAAYI,YAAY4H,OAASF,GAClB,MAAZ3I,KAAK8I,KAAeH,GAAO3I,KAAK8I,KAIxB,MAAbL,IACHzI,KAAKa,YAAYI,YAAY8H,QAAUJ,GACxB,MAAPA,GAAeA,EAAIvI,QAAUqI,IAMxC,MAAMO,EAA8B,CACnCN,OAAQ,iDACRG,OAAQ,+CAGII,EAA4B,CACxC9G,KAAM,QACN+G,aAAa,EACbC,MAAO,CAAEC,UAAW,IAAMC,YAAa,IACvC,OAAO/G,GACN,MAAM,KAAEH,EAAI,UAAEsG,GAAczI,KAAKsB,OAE3BgI,EAAQhH,EAAEE,YAAYL,GAEtBoH,EAAmB,UAATpH,EAYhB,OAXa,WAATA,GAAqBoH,KACxBD,EAAM5G,aAAa,cAAe,iBAClC4G,EAAM5G,aAAa,cAAe,iBAClC4G,EAAM5G,aAAa,eAAgB,oBAAoB6G,EAAU,EAAI,aAGrD,MAAbd,IACHa,EAAM5G,aAAa,UAAW,KAAK+F,OACnCO,EAAWD,QAAU,0BAA0BN,gBAGzCa,GAER,WAAWhH,GACV,GAAyB,UAArBtC,KAAKsB,OAAOa,KAAkB,CACjC,MAAMW,EAAOR,EAAEqB,kBAAkB,IAAK,CAAC,cAAe,SACtDb,EAAK0G,YAAc,oBACnBxJ,KAAK6C,UAAUZ,YAAYa,GAE5B,OAAO9C,KAAK6C,WAEbK,SAAU,CACT0F,IAAK,IACLE,IAAK,IACLW,KAAM,KAEPT,aACA3F,WAAYmF,GAGAkB,EAAY,IAAKT,I,oCCxE9B,gNAOO,MAAMU,EAAS,CACrBC,SAAA,IACAC,UAAA,IACA3H,UAAA,IACA4H,WAAA,IACAC,QAAA,IACAL,UAAA,IACAT,UAAA,M,oCCdD,qO,kCCAA,uBAEA,MAAMe,UAAwB,eAA9B,c,oBACQ,KAAAC,MAAQ,gBACR,KAAA9C,KAAO,QAGf,MAAM+C,UAAsB,eACpB,YACN,MAAIC,MAAMC,KAAK,CACd/G,WAAY2G,EACZC,MAAO,kBACPI,SAAU,uCAIL,mBACNrK,KAAK+G,KAAKuD,QAAQ,cAChBpC,KAAK,IAAMlI,KAAK+G,KAAKwD,QAAQ,SAC7BC,MAAM,IAAMxK,KAAK+G,KAAKH,KAAK,WAI/B,MACE6D,OACApH,WACA,gBACA,MAAIqH,wBAAwBR,IAG9B,MACES,UAAU,CAAEC,SAAU,sBACtBC,YACA3C,KAAK,KACL,MAAIpB,IAAIyD,QAAQ,iC,4MClBlB,IAAaO,EAAb,MAyEC,cAjBgB,KAAAC,IAAM,QACf,KAAAC,UAAY,YAAS,CAAC,OAEnB,KAAAC,cAA0B,GAIjB,KAAAC,QAAU,YAAOlL,KAAK+K,IAAK/K,KAAKiL,eAChC,KAAAE,WAAa,IACb,KAAAC,YAAc,IAAIC,IAClB,KAAAC,kBAAyC,GAQ3DtL,KAAK2K,UAAU,IACbO,QACAK,OAAO,CACP,mBAAoB,oBAAqB,aACzC,CACCC,EAKAC,EAGAC,KAIA,MAAM,OAAEC,EAAM,WAAEC,GAAe5L,KAAK6L,QAEpCL,EAAiBM,oBAAoBH,IAAUC,IAC/CJ,EAAiBO,0BAAyB,GAC1CP,EAAiBQ,2BAA0B,GAE3CP,EAAkBQ,WAAU,GAC5BP,EAAWQ,4BAA2B,MAGvCX,OAAO,CACP,iBACCY,IACA,GAAmB,MAAfnM,KAAKoM,OACR,OAAOpM,KAAK8G,IAAIuF,MAAM,8DAGvB,IAAK,MAAMC,KAActM,KAAKoM,OAAOG,YACpCJ,EAAeK,MAAMF,MAIvBG,IAAI,CACJ,YAAa,WACb,CAACzB,EAAuB0B,KACvB1M,KAAKgL,UAAYA,EACjB0B,EAASC,SAAQ,MApHrB,aACC,OAAO3M,KAAKkL,QAGb,aACC,OAAOlL,KAAK4M,QAGb,aACC,OAAO5M,KAAK6L,QAGb,iBACC,OAAO,IAAIgB,IAAI7M,KAAKoL,YAAYpK,QAGjC,mBACC,OAAO,IAAI6L,IAAI7M,KAAKiL,eAGrB,YACC,OAAOjL,KAAKgL,UAAU8B,IAAkB,UAGzC,WAOC,OANkB,MAAd9M,KAAK+M,QACR/M,KAAK+M,MAAQ/M,KAAKgN,MAAM,CACvB5I,QAASpE,KAAK6L,QAAQoB,QAAU,SAA0BpH,EAC1DqH,UAAW,IAAMlN,KAAK6L,WAGjB7L,KAAK+M,MAGb,UAIC,OAHiB,MAAb/M,KAAKmN,OACRnN,KAAKmN,KAAOnN,KAAKoN,WAEXpN,KAAKmN,KAGb,YAIC,OAHmB,MAAfnN,KAAKqN,SACRrN,KAAKqN,OAASrN,KAAKsN,UAEbtN,KAAKqN,OAGb,eAIC,OAHsB,MAAlBrN,KAAKuN,YACRvN,KAAKuN,UAAYvN,KAAKwD,aAEhBxD,KAAKuN,UAwEN,0BACAvN,KAAKgL,UAAU8B,IAAI,cAAcU,cAGjC,iBAAgB,SAAEC,GAAsC,CAAEA,UAAU,IAC1E,IAAK,MAAOC,EAAMpB,KAAetM,KAAKoL,YACrCpL,KAAKkL,QAAQyC,UAAUD,EAAMpB,GAO9B,OALoB,MAAhBtM,KAAK4M,UACR5M,KAAK4M,QAAU,IAAI,cAAe,OAGnC9M,WAAW,IAAM8B,SAASuF,KAAKrF,UAAUC,IAAI,iBACtC/B,KAAKmL,WAAWvJ,SAASuF,KAAM,CAACnH,KAAK+K,KAAM,CAAE0C,aAG9C,UAAUlC,GAEhB,OADAvL,KAAK6L,QAAU,IAAI,IAAYN,GACxBvL,KAGD,UAAUoM,GAEhB,OADApM,KAAK4M,QAAUR,EACRpM,KAGD,cAAc4N,GACpB,MAAMC,EAAUD,aAAsBvC,IACnCuC,EAAWC,UACX9M,OAAO8M,QAAQD,GAElB,IAAK,IAAKF,EAAMC,KAAcE,EACzB7N,KAAK8N,iBAAiBH,KACzBA,EAAY,eAAaI,qBAAqBJ,IAGX,mBAAzBA,EAAUtK,aACpBsK,EAAUtK,WAAarD,KAAK0K,wBAAwBiD,EAAUtK,aAG/DrD,KAAKoL,YAAY4C,IAAIN,EAAMC,GAG5B,OAAO3N,KAGD,iBACN2N,GAEA,MAA0B,UAAnBA,EAAUxL,KAGX,cAAc8L,GAEpB,OADAjO,KAAKiL,cAAc1C,KAAK0F,GACjBjO,KAGD,gBAAgBkO,GAEtB,OADAA,EAAY9G,QAAQ6G,GAAcjO,KAAKmO,cAAcF,IAC9CjO,KAGD,mBAAmBoO,GAEzB,OADApO,KAAKsL,kBAAkB/C,KAAK6F,GACrBpO,KAGD,wBAAgDqO,GAUtD,MADmB,CAAC,WAAY,SAAU,YARpB,YAAsBA,EAAM,CACjDvH,IAAK9G,KAAK8G,IACVwH,KAAMtO,KAAKsO,KACXC,SAAUvO,KAAKuO,SACfhD,OAAQ,IAAMvL,KAAKuL,UAQX,SACT,OAAO,IAAI,IACVvL,KAAKuO,SACLvO,KAAK8G,IACL9G,KAAKsO,KACLtO,KAAKuL,OACLvL,KAAKgL,WAIG,MAAMvH,GAOf,GANkC,mBAAtBA,EAAQ+K,YAA8B,IACjD/K,EAAQ+K,UAAYxO,KAAKyO,aAEO,mBAAtBhL,EAAQyJ,YAClBzJ,EAAQyJ,UAAY,IAAMlN,KAAKuL,QAE5BmD,MAAMC,QAAQlL,EAAQmL,cACzB,IAAK,MAAMR,KAAe3K,EAAQmL,aACjC5O,KAAK6O,mBAAmBT,GAM1B,OAFA3K,EAAQmL,aAAe5O,KAAKsL,kBAErB,IAAI,IAAO7H,GAGT,UACT,OAAO,IAAI,IAASzD,KAAKuO,SAAUvO,KAAK6L,QAAQoB,SAEvC,YACT,OAAO,IAAI,MA7OAnC,EAAK,aADjB,I,qCACYA,I,kCChBb,uEAGA,SAASgE,EAASC,GACjB,OAAOtJ,OAAOC,UAAUqJ,GAGzB,MAAMC,UAA4B,oBAAlC,c,oBACkB,KAAAC,gBAAkB,CAAC,SAAU,WAAY,SAKnD,UACNjP,KAAKa,YAAYI,YAAYiO,QAAUC,IACtC,GAAgB,MAAZA,EAAkB,CACrB,GAAIL,EAAS9O,KAAKkP,SACjB,OAAOlP,KAAKkP,SAAWC,EAASC,UAEjC,GAAIpP,KAAKkP,mBAAmBxK,KAC3B,OAAO1E,KAAKkP,QAAQE,WAAaD,EAASC,UAG5C,OAAO,GAGRpP,KAAKa,YAAYI,YAAYoO,QAAUF,IACtC,GAAgB,MAAZA,EAAkB,CACrB,GAAIL,EAAS9O,KAAKqP,SACjB,OAAOrP,KAAKqP,SAAWF,EAASC,UAEjC,GAAIpP,KAAKqP,mBAAmB3K,KAC3B,OAAO1E,KAAKqP,QAAQD,WAAaD,EAASC,UAG5C,OAAO,GAGR,MAAM,OAAEE,EAAM,KAAEC,EAAO,UAAavP,KAAKsB,QACG,IAAxCtB,KAAKiP,gBAAgBO,SAASD,IACjCvP,KAAK+G,KAAK0I,WAAW,qCAAqCF,YAAevP,KAAKC,SAASyP,uBAAuB1P,KAAKiP,gBAAgBU,KAAK,UAGzI3P,KAAK4P,UAAY,IAAU5P,KAAKC,SAAU,CACzC4P,WAAY,YACZC,YAAa9P,KAAKU,QAClB4O,OAAmB,SAAXA,EACRC,OACAQ,UAAW,UACXC,UAAW,UACXC,YAAY,EACZC,aAAa,EACbC,MAAM,EACNC,OAAQ,CACPC,IACC,MAAMhB,EAAU3K,KAAK4L,MAAMtQ,KAAKqP,SAChC,OAAO5J,OAAO8K,MAAMlB,IAAYgB,EAAEjB,UAAYC,GAE/CgB,IACC,MAAMnB,EAAUxK,KAAK4L,MAAMtQ,KAAKkP,SAChC,OAAOzJ,OAAO8K,MAAMrB,IAAYmB,EAAEjB,UAAYF,IAGhDsB,SAAUC,IACTzQ,KAAKU,QAAU+P,EAASrQ,OAAS,EAC9BqQ,EACAA,EAAS,GAEZzQ,KAAKQ,OAAOgN,iBAKR,aACgB,MAAlBxN,KAAK4P,WAAuD,mBAA3B5P,KAAK4P,UAAUc,SACnD1Q,KAAK4P,UAAUc,UAIV,aACN,OAAO,IAAIhM,KAAK1E,KAAKkP,SAAmByB,qBAGlC,aACN,OAAO,IAAIjM,KAAK1E,KAAKqP,SAAmBsB,sBAInC,MAAM9G,EAA4B,CACxC1H,KAAM,QACN,OAAOG,GACN,MAAMgH,EAAQhH,EAAEE,YAAY,QAG5B8G,EAAMsH,gBAAgB,YACtBtH,EAAM5G,aAAa,aAAc,QAEjC,MAAMmO,EAAYvO,EAAEwO,gBAAgBxH,EAAO,WAAY,CACtD,CAAC,cAAe,QAChB,CAAC,QAAS,sBAGLyH,EAAmBzO,EAAEqB,kBAAkB,MAAO,CAAC,uBACrDoN,EAAiBrO,aAAa,aAAc,QAC5CqO,EAAiBpO,MAAMC,YAAY,SAAU,WAE7C,MAAMoO,EAAiB1O,EAAEqB,kBAAkB,OAAQ,CAAC,qBAC9CsN,EAAY3O,EAAE4O,WAAW,SAM/B,OAJAF,EAAe/O,YAAYgP,GAC3BF,EAAiB9O,YAAY+O,GAC7BH,EAAU5O,YAAY8O,GAEfF,GAER3N,SAAU,CACTgM,QAAS,IACTG,QAAS,KAEVrG,WAAY,CACXkG,QAAS,kDACTG,QAAS,oDAEVhM,WAAY2L,I,kCC3Hb,8DAQA,MAAMmC,EAAmB,GACnBC,EAAmB,IAElB,MAAMC,UAAgB,IAgB5B,YACoB7N,EACAuD,EACAiG,EACAnB,EACAb,GAEnBnL,QANmB,KAAA2D,YACA,KAAAuD,OACA,KAAAiG,QACA,KAAAnB,UACA,KAAAb,YAInBhL,KAAKsR,SAAWtR,KAAKgL,UAAU8B,IAAI,YACnC9M,KAAKuR,WAAavR,KAAKgL,UAAU8B,IAAI,cAErC9M,KAAKwR,SAAWxR,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,iBAAkB,SAC3E3D,KAAKiK,MAAQjK,KAAKwD,UAAUG,kBAAkB,KAAM,CAAC,eAAgB,CAAC,CAAC,KAAM,eAAe3D,KAAKyR,cAEjGzR,KAAK0R,kBAAoB1R,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,SAAU,CAAC,CAAC,OAAQ,UAAW,CAAC,aAAc,WACnH3D,KAAK0R,kBAAkBvN,UAAY,UAEnCnE,KAAK2R,OAAS3R,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,iBACvD3D,KAAKmH,KAAOnH,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,eACrD3D,KAAKyH,OAASzH,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,iBACvD3D,KAAK4R,QAAU5R,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,kBAExD3D,KAAK2R,OAAO1P,YAAYjC,KAAKiK,OAC7BjK,KAAK2R,OAAO1P,YAAYjC,KAAK0R,mBAE7B1R,KAAK4R,QAAQ3P,YAAYjC,KAAK2R,QAC9B3R,KAAK4R,QAAQ3P,YAAYjC,KAAKmH,MAC9BnH,KAAK4R,QAAQ3P,YAAYjC,KAAKyH,QAE9BzH,KAAK6R,mBAAqB7R,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,MAAO,YAAa,CAAC,CAAC,OAAQ,YACpG3D,KAAK8R,eAAiB9R,KAAKwD,UAAUG,kBAAkB,SAAU,CAAC,MAAO,eAAgB,CAAC,CAAC,OAAQ,YAEnG3D,KAAKyH,OAAOxF,YAAYjC,KAAK6R,oBAC7B7R,KAAKyH,OAAOxF,YAAYjC,KAAK8R,gBAE7B9R,KAAK+R,OAAS/R,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,gBAAiB,CAAC,CAAC,OAAQ,cAClF3D,KAAK+R,OAAO9P,YAAYjC,KAAK4R,SAE7B5R,KAAKiE,UAAYjE,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,OAAQ,SAAU,CAC3E,CAAC,cAAe,QAChB,CAAC,kBAAmB,eACpB,CAAC,OAAQ,UACT,CAAC,WAAY,QAEd3D,KAAKiE,UAAUhC,YAAYjC,KAAK+R,QAEhCnQ,SAASuF,KAAKlF,YAAYjC,KAAKiE,WAGzB,KAAoCR,EAA6B,IACvE,MAAM,KAAEsD,GAAS/G,MACX,MACLiK,EAAQ,uDAAsD,SAC9DI,EAAW,8EAA6E,WACxFhH,EAAa,IAAY,QACzB2O,EAAU,MACF,IAELvO,EAEEwO,EAAuB,SACvBC,EAAmB,KACzB,IAAI,cACHC,EAAgBF,EAAoB,UACpCG,EAAYF,GACTzO,GAEkB,IAAlB0O,KACmB,IAAlBA,IACHA,EAAgBF,GAEjBjS,KAAK6R,mBAAmB7P,UAAYmQ,IAEnB,IAAdC,KACe,IAAdA,IACHA,EAAYF,GAEblS,KAAK8R,eAAe9P,UAAYoQ,GAGjCpS,KAAKiK,MAAM9F,UAA6B,mBAAV8F,EAAuBA,IAAUA,EAC/DjK,KAAKmH,KAAKhD,UACW,mBAAbkG,EAA0BA,IAAaA,EAE/C,MAAM7J,EAASR,KAAKuR,WAAWc,MAAK,GAC9BpS,EAAWD,KAAKsR,SAAStR,KAAKiE,UAAnBjE,CAA8BQ,GACzC8R,EAAQ,YAAmBjP,EAAY,CAC5CyD,IAAK9G,KAAK+G,KACVuH,KAAMtO,KAAKgN,MACXuB,SAAUvO,KAAKwD,UACf+H,OAAQ,IAAMvL,KAAK6L,UAGpBrL,EAAO8R,MAAQ,IAAIA,EAAMrS,EAAUO,EAAQR,KAAKgL,WAChDxK,EAAOgN,cAEP,MAAM+E,EAAqBC,IACZ,WAAVA,EAAEC,KAA8B,QAAVD,EAAEC,KAC3BC,KAGIC,EAAU,KACfC,IACA5S,KAAK6S,UAAUN,EAAmB/R,IAGnCR,KAAK8S,UAAUP,GAEf,MAAMK,EAAuB,KAC5B5S,KAAK0R,kBAAkBtM,oBAAoB,QAASuN,GACpD3S,KAAK6R,mBAAmBzM,oBAAoB,QAASuN,GACrD3S,KAAK8R,eAAe1M,oBAAoB,QAASsN,GACjD1S,KAAKwR,SAASpM,oBAAoB,QAASsN,IAGtCA,EAAQ,KACTV,EAAQe,KAAK,CAAEhM,QAAQ1D,IAC1BsP,KAQF,OALA3S,KAAK0R,kBAAkBvL,iBAAiB,QAASwM,GACjD3S,KAAK6R,mBAAmB1L,iBAAiB,QAASwM,GAClD3S,KAAK8R,eAAe3L,iBAAiB,QAASuM,GAC9C1S,KAAKwR,SAASrL,iBAAiB,QAASuM,GAEjC,CAAEA,QAAOC,WAGP,UAAUJ,GACnBvS,KAAKwR,SAAS7O,MAAMC,YAAY,UAAW,SAE3C5C,KAAKiE,UAAUtB,MAAMC,YAAY,UAAW,SAC5C5C,KAAKiE,UAAUnC,UAAUvB,OAAO,QAChCP,KAAKiE,UAAU2M,gBAAgB,eAC/B5Q,KAAKiE,UAAUvB,aAAa,aAAc,QAC1C1C,KAAKiE,UAAUtB,MAAMC,YAAY,gBAAiB,QAClD5C,KAAKiE,UAAUtB,MAAMC,YAAY,iBAAkB,QAEnDoQ,OAAO7M,iBAAiB,UAAWoM,GACnC3Q,SAASuF,KAAKlF,YAAYjC,KAAKwR,UAC/B5P,SAASuF,KAAKrF,UAAUC,IAAI,cAE5BjC,WAAW,KACVE,KAAKwR,SAAS1P,UAAUC,IAAI,QAC5B/B,KAAKiE,UAAUnC,UAAUC,IAAI,SAC3BoP,GAGM,UACToB,EACAU,GAEAjT,KAAKwR,SAAS1P,UAAUvB,OAAO,QAC/BP,KAAKiE,UAAUnC,UAAUvB,OAAO,QAEhCT,WAAW,KACVE,KAAKiE,UAAUtB,MAAMC,YAAY,UAAW,QAC5C5C,KAAKwR,SAAS7O,MAAMC,YAAY,UAAW,SACzCwO,GAEH6B,EAAMC,WACNF,OAAO5N,oBAAoB,UAAWmN,GACtC3Q,SAASuF,KAAKrF,UAAUvB,OAAO,iB,oCC7LjC,oFAGO,MAAM4S,EAA0B,IA6ChC,MAAMC,UAAe,IAU3B,YAAoB3P,GACnB5D,QADmB,KAAA4D,UAEnB,MAAM,aAAEmL,EAAe,IAAOnL,EAC9BzD,KAAK4O,aAAe,CACnByE,QAASzE,EACP0E,IAAInS,GAAKA,EAAEkS,SACXE,OAAOpS,GAAkB,mBAANA,GAGrBqS,SAAU5E,EACR0E,IAAInS,GAAKA,EAAEqS,UACXD,OAAOpS,GAAkB,mBAANA,GACrBsS,cAAe7E,EACb0E,IAAInS,GAAKA,EAAEsS,eACXF,OAAOpS,GAAkB,mBAANA,IAOhB,UAAmBuS,GACzB,OAAO1T,KAAK2T,MAASD,EAAK,OAGpB,WAAoBA,EAAaE,EAAY,MACnD,OAAO5T,KAAK2T,MAASD,EAAK,OAAQE,GAG5B,YAAqBF,EAAaE,GACxC,OAAO5T,KAAK2T,MAASD,EAAK,QAASE,GAG7B,UAAmBF,EAAaE,GACtC,OAAO5T,KAAK2T,MAAMD,EAAK,MAAOE,GAGxB,aAAsBF,GAC5B,OAAO1T,KAAK2T,MAASD,EAAK,UAGpB,YAAqBA,GAC3B,OAAO1T,KAAK2T,MAASD,EAAK,SAGpB,WAAWG,EAAaC,EAAcC,GAC5C,OAAO,IAAIC,IAAIH,EAAK,OAAOE,EAAM,IAAM,QAAQD,MAASG,SAGjD,YACPJ,EACAK,EACAN,GAEA,IAAIJ,EAAW,IAAIW,SACnB,IACC,MAAM,KACLL,EAAO9T,KAAKyD,QAAQyJ,YAAYtC,SAAQ,IACxCmJ,EAA4B,WAAtBK,SAASC,SAAqB,MACpCC,EAAQ,WAAU,YAClBC,EAAc,UAAS,QACvBC,EAAO,UACPC,EAAS,UACTC,GAAY,EAAK,KACjBnF,EAAO,OAAM,SACboF,EAAW,SAAQ,eACnBC,EAAiB,2BAA0B,QAC3CxQ,EAAU+O,EAAuB,OACjCH,GACGhT,KAAKyD,QAEHiQ,EAAM1T,KAAK6U,WAAWhB,EAAKC,EAAMC,GACjCe,EAAY,IAAIC,gBAEtB,IAAI1B,EAAU,IAAI2B,QAAQtB,EAAK,CAC9BQ,SACAI,QACAC,cACAC,UACAC,YACAC,YACAnF,OACAoF,WACAC,iBACAK,OAAQH,EAAUG,OAClBjC,SACA7L,KAAM+N,KAAKC,UAAUvB,KAGtB,IAAK,MAAMwB,KAAapV,KAAK4O,aAAayE,QACzCA,QAAgB+B,EAAU/B,GAG3B,MAAMgC,EAAavV,WAAWgV,EAAUQ,MAAOlR,GAI/C,GAHAoP,QAAiBG,MAAMN,GACvBrN,aAAaqP,GAET7B,EAAS3L,GAAI,CAChB,IAAIpF,QAAiB+Q,EAAS+B,OAC9B,IAAK,MAAMC,KAAcxV,KAAK4O,aAAa4E,SAC1C/Q,QAAc+S,EAAW/S,GAE1B,OAAOA,EAGR,MAAM,IAAIgT,MACT,MAAOC,GACR,IAAK,MAAMC,KAAmB3V,KAAK4O,aAAa6E,oBACzCkC,EAAgBnC,EAASoC,QAASF,GAEzC,MAAMA,E,QAEgC,mBAA3B1V,KAAKyD,QAAQ+K,WACvBxO,KAAKyD,QAAQ+K,gB,kDCzKjB,MAAM,UAA0B,IAAhC,c,oBACkB,KAAAqH,OAAS,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,OAAQ,QAAS,QAE7F,UACN,MAAM,MAAEC,EAAQ,WAAc9V,KAAKsB,OAEnC,IAAoC,IAAhCtB,KAAK6V,OAAOrG,SAASsG,GACxB,MAAM,IAAIL,MAAM,wBAAwBK,yBAA6B9V,KAAK6V,OAAOlG,KAAK,SAGvF,MAAMoG,EAAS/V,KAAKwD,UAAUG,kBAAkB,OAAQ,CAAC,YACzDoS,EAAO/T,UAAY,aAEnB,MAAMgU,EAAUhW,KAAKwD,UAAUG,kBAAkB,MAAO,CAAC,iBAAkB,QAAQmS,IAAS,QAAS,CAAC,CAAC,OAAQ,YAC/GE,EAAQ/T,YAAY8T,GACpBC,EAAQrT,MAAMC,YAAY,aAAc,WAExC5C,KAAKC,SAASgC,YAAY+T,IAIrB,MAAMC,EAAiC,CAC7C5S,WAAY,GCzBb,kCAEO,MAAM6S,EAAO,CACnBD,e,uDCDD,kCAAO,MAAME,EAOZ,YAA6BC,EAAoBjN,EAAiB,IAArC,KAAAiN,YALb,KAAAC,MAAyB,GAElC,KAAAC,cAAgB,uBAChB,KAAAC,qBAAuB,cAG7B,IAAK,MAAQ7I,KAAM+E,EAAG,MAAEhQ,KAAWiM,MAAM8H,KAAKJ,EAAUK,YACvDzW,KAAK0W,QAAQjE,EAAKhQ,GAGnB,IAAK,MAAOgQ,EAAKhQ,KAAU1B,OAAO8M,QAAQ1E,GACzCnJ,KAAK0W,QAAQjE,EAAKhQ,GAWb,WAAWiL,GACjB,OAAOA,EACL5I,QAAQ9E,KAAKsW,cAAe,IAC5BxR,QAAQ9E,KAAKuW,qBAAsB,CAACI,EAAGC,EAAQC,IAAWA,EAASD,EAAOE,cAAgBF,GAMtF,UAAUG,GAChB,OAAO/W,KAAKoW,UAAUtU,UAAUkV,SAASD,GAOnC,UAAUA,GACZ/W,KAAKiX,UAAUF,IAClB/W,KAAKoW,UAAUtU,UAAUC,IAAIgV,GAQxB,aAAaA,GACf/W,KAAKiX,UAAUF,IAClB/W,KAAKoW,UAAUtU,UAAUvB,OAAOwW,GAW3B,aAAaG,EAAoBC,GACvC,MAAMC,EAAKF,EAAWG,MAAM,OAAO9D,OAAOpS,GAAKA,EAAEf,OAAS,GACpDkX,EAAMH,EAAWE,MAAM,OAAO9D,OAAOpS,GAAKA,EAAEf,OAAS,GAE3D,IAAK,MAAMmX,KAAKD,EACXF,EAAG5H,SAAS+H,IAGhBvX,KAAKwX,aAAaD,GAGnB,IAAK,MAAMxI,KAAKqI,EACfpX,KAAKyX,UAAU1I,GAOV,KAAK0D,EAAahQ,GACxBzC,KAAKoW,UAAU1T,aAAa+P,EAAKhQ,GAM3B,SAAYkU,EAAWe,GAG7B,OADAjR,QAAQI,KAAK,sBACN,OAGE,QAAQ4L,EAAahQ,GAC9B,MAAMkV,EAAa3X,KAAK4X,WAAWnF,GACnCzS,KAAK2X,GAAclV,EACnBzC,KAAKqW,MAAM5D,GAAOkF,K,yDCnGpB,kCAAO,MAAM/N,EAA2B,CACvCzH,KAAM,QACNC,cAAe,aACfC,WAAY,mBACZ,OAAOC,GACN,MAAMgH,EAAQhH,EAAEE,YAAY,YAQ5B,OAPA8G,EAAM3G,MAAMC,YAAY,SAAU,WAE9B5C,KAAKsB,OAAOC,eAAe,YAC9BvB,KAAK6C,UAAUf,UAAUvB,OAAO,cAChCP,KAAK6C,UAAUf,UAAUC,IAAI,sBAGvBuH,GAERpG,SAAU,CACTE,UAAW,O,kCCjBb,8DAIO,MAAMyU,UAA8C,IAA3D,c,oBACQ,KAAAC,OAAc,GAEd,YACN,OAAO9X,KAAK8X,OAGN,cAAcC,GACpB,MAAMvL,EAAQ,IACVxM,KAAKgY,kBAAkBD,MACvBA,GAeJ,OAZI/X,KAAKiY,iBAAiBzL,EAAM0L,WAC/B1L,EAAM0L,QAAU,CAAC,eAAgB1L,EAAM0L,UAEpClY,KAAKiY,iBAAiBzL,EAAM2L,UAC/B3L,EAAM2L,OAAS,CAAC,eAAgB3L,EAAM2L,SAEnCnY,KAAKiY,iBAAiBzL,EAAM4L,YAC/B5L,EAAM4L,SAAW,CAAC,eAAgB5L,EAAM4L,WAGzCpY,KAAK8X,OAAOvP,KAAKiE,GAEVA,EAGD,qBACN,OAAO,EAGD,qBACN,MAAM6L,EAAQ,CACblW,KAAM,IAAI,YAAU,CACnBmW,OAAO7V,GACC8V,SAAS9V,EAAO,IAExB+V,OAAO/V,GACCA,GAASA,EAAMgW,WAEvB,OAAOC,EAAGC,GACT,OAAO3Y,KAAKqI,GAAGqQ,IAAMA,IAAMC,GAE5B,GAAGlW,GACF,OAAOgD,OAAOC,UAAU1F,KAAKsY,OAAO7V,QAMvC,OADA4V,EAAMlW,KAAKuL,KAAO,OACX2K,EAGD,wBACN,MAAMA,EAAQ,CACblW,KAAM,IAAI,YAAU,CACnBmW,OAAO7V,GACC8V,SAAS9V,EAAO,IAExB+V,OAAO/V,GACCA,GAASA,EAAMgW,WAEvB,OAAOC,EAAGC,GACT,OAAO3Y,KAAKqI,GAAGqQ,IAAMA,IAAMC,GAE5B,GAAGlW,GACF,OAAOgD,OAAOC,UAAU1F,KAAKsY,OAAO7V,QAMvC,OADA4V,EAAMlW,KAAKuL,KAAO,QACX2K,EAGE,iBAAiBO,GAC1B,MAAuB,mBAATA,EAGL,0BAAyB,QAAE5T,EAAU,KAC9C,IAAK,MAAO0K,EAAImJ,KAAc9X,OAAO8M,QAAQ7I,GACxC0J,MAAMC,QAAQ3J,IAGdhF,KAAKiY,iBAAiBY,KACzB7T,EAAQ0K,GAAM,CAAC,eAAgBmJ,IAIjC,OAAO7T,EAGE,mBACT,OACC8T,EAAS,GAAG,KACZlF,EAAO,GAAG,KACVlG,EAAO,GAAE,UACTC,EAAY,GAAE,OACdoL,EAAS,KAGVrL,EAAQA,GAAQC,EAEhB,IAAI+F,EAAM,IAAIE,EAAKoF,OAAStL,EAAOA,EAAK2J,MAAM,aAAa1H,KAAK,KAAKsJ,gBACnEnU,QAAQ,QAAS,IAEnB,IAAK,MAAO2N,GAAK,KAAEtQ,EAAO,OAAUpB,OAAO8M,QAAaiL,GACvDpF,GAAqB,SAAdvR,EAAKuL,KAAkB,KAAQgG,EAAIlE,SAAS,KAAO,IAAM,IAChEkE,GAAOjB,EAGR,MAAO,CAAE/E,OAAMqL,SAAQrF,U,kCCpHzB,sFASA,MAAMwF,EAAgBnY,OAAOoY,KAAK,CACjCC,mBAAmB,EACnBjX,KAAM,QACNE,WAAY,qBACZD,cAAe,aACf+G,MAAO,GACP9F,WAAY,cAAc,MAC1B,OAAOgW,GACN,OAAOrZ,KAAK6C,WAEb,YAAYP,GACX,MAAMgX,EAAchX,EAAEiX,aACtBD,EAAY9P,YAAcgQ,EAAaC,oBAAoBzZ,KAAKsB,QAChEtB,KAAKiD,OAAOhB,YAAYqX,IAEzB,WAAWD,GACV,OAAOrZ,KAAK6C,aAIR6W,EAAwB3Y,OAAOoY,KAAK,CACzCQ,OAAQ,2BACRC,SAAU,6BACVC,SAAU,6BACVC,aAAc,4CACd,iBACC,MAAO,IAAI9Z,KAAK6Z,eAAe7Z,KAAK8Z,oBAAoB9Z,KAAK4Z,cAIxD,MAAMJ,UAAqB,IAoC1B,uBAAuBlY,GAC7B,OAAQA,EAAOZ,QAAmB2W,MAAM,KAAK0C,MAMvC,2BAA2BzY,GACjC,OAAOkY,EAAaQ,gBAAgB1Y,GAClC+V,MAAM,gBACN/D,IAAInS,GAAKoP,MAAM9K,OAAOtE,IAAMA,EAAE8Y,OAAO,GAAGnD,cAAgB3V,EAAE+Y,UAAU,GAAK/Y,GACzEwO,KAAK,KAMD,qBAAqBwK,GAC3B,MACC,CAAC,QAAS,WAAY,UAAU3K,SAAS2K,EAAOC,SAC7CD,EACAA,EAAOja,cAAc,WAAaia,EAAOja,cAAc,SAQrD,4BAA4ByN,GAElC,MAAMrL,EAAI,IAAI,IAER+X,EAAa,eAAK,IAAKb,EAAac,kBAAmB3M,IAC7D0M,EAAWjB,kBAA8C,qBAA1BiB,EAAWhY,WAE1C,MAAMkY,EAAc,eAAKf,EAAagB,iBAOtC,GAJAzZ,OAAO0Z,OAAOF,EAAYrX,SAAUmX,EAAWnX,UAC/CnC,OAAO0Z,OAAOF,EAAYG,WAAYL,EAAWK,iBAGnB7U,IAA1BwU,EAAWhX,WACd,MAAM,IAAIoS,MAAM,sBAAsBP,KAAKC,UAAUkF,MA4HtD,OA1HAE,EAAYlX,WAAagX,EAAWhX,WAGpCkX,EAAYlQ,SAAW,CAAC,WAAY,SAAU,CAACpK,EAAyBqB,KACvE,MAAMqZ,EAAM1a,EAAS,GAEf4C,EAAYP,EAAEqB,kBAAkB,MAAO,CAAC0W,EAAWjY,gBAGnD+X,EAASE,EAAWO,OAAO7H,KAAK,CAAElQ,YAAWvB,UAAUgB,GAEvDuY,EAAgD,UAArCV,EAA4BhY,KACvC2Y,EAAaxZ,EAAOC,eAAe,YACnCwZ,EAAWzZ,EAAOC,eAAe,UAGjC0B,EAASX,EAAE0Y,YAAY,CAACX,EAAWhY,YAAuB,CAAEyY,aAAYC,WAAUF,aAEnD,IAAjCR,EAAWjB,mBACdvW,EAAUZ,YAAYgB,IAGQ,IAA3BoX,EAAWnR,YACdrG,EAAUZ,YAAYK,EAAEwO,gBAAgBqJ,EAAQ7Y,EAAO2Z,OAEvDpY,EAAUZ,YAAYkY,GAGO,MAA1BQ,EAAIlZ,QAAQ,aACf0Y,EAAOxX,MAAMuY,UAAY,MACzBjY,EAAOnB,UAAUC,IAAI,YAGtB,MAAMoZ,EAAclY,EAAOmY,kBACR,MAAfD,GACHlY,EAAOqD,YAAY6U,GAGnBd,EAAWgB,YACVtI,KAAK,CAAE9P,SAAQ3B,UAAUgB,GAER,MAAf6Y,GACHlY,EAAOhB,YAAYkZ,GAIpBtY,EAAUZ,YAAYK,EAAEiX,WAAW,aAEE,IAAjCc,EAAWjB,oBACdnW,EAAON,MAAMC,YAAY,SAAU,WACnCC,EAAUZ,YAAYgB,IAGtBoX,EAAWiB,WACVvI,KAAK,CAAElQ,YAAWvB,UAAUgB,GAG9B,MAAMiZ,EAAc/B,EAAagC,cAAcrB,GAE/CX,EAAaiC,iBACXlI,OAAOpS,IAAkC,IAA7BG,EAAOC,eAAeJ,IAClCiG,QAAQjG,IACRoa,EAAY7Y,aACXvB,EAAE2D,QAAQ,QAAS4W,GAAK,IAAIA,EAAEzC,iBAC9B9X,EAAEwa,WAAW,MAAQ,SAASxa,IAAM,UAIX,WAAxBoa,EAAYnB,UACfmB,EAAY7Y,aAAa,WAAY,mBAAmB8W,EAAaoC,uBAAuBC,gBAC5FN,EAAY7Y,aAAa,UAAW,oCAGrC,MAAMoZ,EAAmBxZ,EAAEqB,kBAAkB,MAAO,GAAI,CACvD,CAAC,cAAe6V,EAAaoC,uBAAuBjC,QACpD,CAAC,UAAWH,EAAaoC,uBAAuBC,YAChD,CAAC,OAAQ,YAGJ,WAAE7S,EAAa,IAAQqR,EACvBlR,EAAQpI,OAAOC,KAAKqZ,EAAWlR,OAErC,IAAK,MAAOsJ,EAAKhQ,KAAU1B,OAAO8M,QAAQ7E,GACzCwQ,EAAauC,oBAAoB/N,IAAIyE,EAAKhQ,GAC1C0G,EAAMZ,KAAKkK,GAcZ,IAAIuJ,EACJ,GAZAxC,EAAaiC,iBACXQ,UAAU9S,EAAO,SACjBoK,OAAOpS,IAA4B,IAAvBA,EAAEwa,WAAW,OACzBpI,OAAOpS,IAAiD,IAA5CqY,EAAauC,oBAAoBG,IAAI/a,IACjDoS,OAAOpS,GAAW,UAANA,GAAiBoa,EAAYpZ,OAAShB,GAClDiG,QAAQjG,IACR,MAAMgb,EAAW7Z,EAAEqB,kBAAkB,MAAO,CAAC,eAAgB,CAAC,CAAC,aAAcxC,KAC7Egb,EAASna,UAAYwX,EAAauC,oBAAoBjP,IAAI3L,GAC1D2a,EAAiB7Z,YAAYka,MAIf,IAAZtB,EAAkB,CACrB,MAAMuB,EAAU9Z,EAAEqB,kBAAkB,MAAO,CAAC,eAC5CyY,EAAQna,YAAYY,GACpBuZ,EAAQna,YAAY6Z,GACpBE,EAAQI,EAAQC,eAEhBxZ,EAAUZ,YAAY6Z,GACtBE,EAAQnZ,EAAUwZ,UAanB,OAVAL,EAAQA,EAAMlX,QAAQ,UAAW0U,EAAaQ,gBAAgB1Y,IAE9D6H,EACE/B,QAAQkV,IACRN,EAAQA,EAAMlX,QACb,IAAIyX,OAAO,KAAKD,MAAU,KAC1Bhb,EAAOgb,IAAUjC,EAAWlR,MAAkBmT,MAI1CN,IAGDzB,GA3Me,EAAAkB,iBAAmB,CACzC,WAAY,aACZ,WAAY,aACZ,WAAY,cAGU,EAAAM,oBAAsB,IAAI1Q,IAAoB,CACpE,CAAC,QAAS,kEACV,CAAC,WAAY,0BACb,CAAC,YAAa,4BACd,CAAC,YAAa,uBAGQ,EAAAmP,gBAAsC,CAC5DE,WAAY,CACX8B,QAAS,YAEVC,QAAS,CACR5b,YAAa,WAEdqC,SAAU,CACTxC,QAAS,IACTgc,eAAgB,IAChBC,WAAY,IACZC,WAAY,IACZC,WAAY,MAIS,EAAAvC,eAAiBpB,EACjB,EAAA0C,uBAAyBlC,G,kCCrEjD,kCAAO,MAAMoD,EAAb,cACQ,KAAAC,eAAqC,CAC3C,CAAC,aAAc,6BACf,CAAC,eAAgB,6BACjB,CAAC,WAAY,iBACb,CAAC,mBAAoB,yBAkIf,KAAAnJ,KAA+B7S,OAAOic,OAAO,MA/H7C,kBACN5C,EACA6C,EAAoB,GACpB9T,EAA4B,IAE5B,MAAMwR,EAAM/Y,SAASC,cAAcuY,GAE/B6C,EAAQ7c,OAAS,GACpBua,EAAI7Y,UAAUC,OAAOkb,GAGtB,IAAK,MAAOxK,EAAKhQ,KAAU0G,EAC1BwR,EAAIjY,aAAa+P,EAAKhQ,GAGvB,OAAOkY,EAKD,YAAYxY,EAAO,OAAQgH,EAA4B,IAC7D,MAAM+T,EAAoB,UAAT/a,EACXgb,EAAoB,UAAThb,EACXib,EAAuB,aAATjb,EAGdkb,EAFeF,GAAYC,EAI7B,CAAC,oBACDF,EACC,CAAC,gBACD,CAAC,gBAEAI,EAAkC,IACpCtd,KAAK+c,kBACL5T,EACH,CAAC,OAAQhH,IASV,OANIgb,EACHG,EAAYC,SACc,IAAhBH,IAAsC,IAAbF,GACnCI,EAAY/U,KAAK,CAAC,YAAa,iBAAkB,CAAC,cAAe,oBAG3DvI,KAAK2D,kBAAkB,QAAS0Z,EAAQC,GAGzC,iBACN,OAAOtd,KAAK2D,kBAAkB,WAAY,CAAC,gBAAiB,IACxD3D,KAAK+c,eACR,CAAC,YAAa,iBACd,CAAC,cAAe,qBAIX,WAAW9B,EAAcuC,GAAe,GAC9C,MAAMC,EAAe,CAAC,KAAM,MAAMxC,EAAKnW,QAAQ,OAAQ,OAIvD,OAHI0Y,GACHC,EAAalV,KAAK,SAEZvI,KAAK2D,kBAAkB,OAAQ8Z,EAAc,CAAC,CAAC,cAAe,UAG/D,YAAY3b,GAAqB,WACvCgZ,GAAa,EAAK,SAClBC,GAAW,EAAK,QAChBF,GAAU,GAKP,CACFC,YAAY,EACZC,UAAU,EACVF,SAAS,IAGV,MAAM5X,EAASjD,KAAK2D,kBACnB,QACA7B,EACA,CAAC,CAAC,cAAe,+BAGlB,IAAmB,IAAfgZ,IAAwBD,EAAS,CACpC,MAAM6C,EAAQ1d,KAAK2D,kBAAkB,OAAQ,CAAC,gBAC9C+Z,EAAMlU,YAAc,KACpBvG,EAAOhB,YAAYyb,GAOpB,OAJiB,IAAb3C,GACH9X,EAAOnB,UAAUC,IAAI,WAGfkB,EAGD,WAAWyK,GACjB,OAAe,MAARA,EACJ1N,KAAK2D,kBAAkB,MAAO,GAAI,CAAC,CAAC,gBAAiB+J,KACrD1N,KAAK2D,kBAAkB,iBAGpB,gBAAgBwW,EAAqBc,EAAe0C,EAAsC,IAChG,GAAY,MAAR1C,EACH,OAAOd,EAGR,MAAMyD,EAAc5d,KAAK2D,kBAAkB,MAAO,CAAC,gBAC7Cka,EAAqB7d,KAAK2D,kBAAkB,MAAO,CAAC,uBAAwBga,GAC5EG,EAAkB9d,KAAK2D,kBAAkB,OAAQ,CAAC,qBAClDoa,EAAQ/d,KAAKkR,WAAW+J,EAAMA,EAAKU,WAAW,QAQpD,OANAmC,EAAgB7b,YAAY8b,GAC5BF,EAAmB5b,YAAY6b,GAE/BF,EAAY3b,YAAY4b,GACxBD,EAAY3b,YAAYkY,GAEjByD,EAaD,WAMA,cAAqDxD,GAC3D,OAAOxY,SAASC,cAAcuY,GAGxB,WAAW3X,GACjB,OAAOb,SAASoB,eAAeP,GAGzB,cAAcA,GACpB,OAAOb,SAASoc,cAAcvb,GAGxB,YAAYsW,EAAqBkF,GACvClF,EAAO9W,YAAYgc,GAGb,YAAYlF,EAAqBkF,GACvClF,EAAOzS,YAAY2X,GAGb,aAAalF,EAAqBkF,EAAuBC,GAC/DnF,EAAOoF,aAAaF,EAAUC,GAGxB,SAAgCha,EAAOwJ,GAC7CxJ,EAAGpC,UAAUC,IAAI2L,GAGX,YAAmCxJ,EAAOwJ,GAChDxJ,EAAGpC,UAAUvB,OAAOmN,GAGd,SAAgCxJ,EAAOvB,EAAeF,EAAY2b,GACxEla,EAAGvB,MAAMC,YAAYD,EAAOF,EAAO2b,EAAY,YAAc,IAGvD,YAAmCla,EAAOvB,GAChDuB,EAAGvB,MAAM0b,eAAe1b,GAGlB,aAAoCuB,EAAOwJ,EAAcjL,GAC/DyB,EAAGxB,aAAagL,EAAMjL,GAGhB,gBAAuCyB,EAAOwJ,GACpDxJ,EAAG0M,gBAAgBlD,GAGb,YAA0FxJ,EAAOwJ,EAASjL,GAChHyB,EAAGwJ,GAAQjL,EAGL,SAAgC6b,EAAS7b,GAC/C6b,EAAKC,UAAY9b,EAGX,WAAW6b,GACjB,OAAOA,EAAKE,WAGN,YAAYF,GAClB,OAAOA,EAAKG,YAGN,kBAAkBC,EAAsCC,GAAkB,GAChF,MAAMza,EAAmD,iBAAnBwa,EACnC9c,SAAS1B,cAAcwe,GACvBA,EAEH,GAAU,MAANxa,EACH,MAAM,IAAIuR,MAAM,iBAAiBiJ,iCAOlC,OAJwB,IAApBC,IACHza,EAAGsF,YAAc,IAGXtF,EAGD,OACN0a,EACAC,EACAC,GAGA,OADAF,EAAOzY,iBAAiB0Y,EAAWC,GAC5B,IAAMF,EAAOxZ,oBAAoByZ,EAAWC,M,oCC1OrD,kDAEA,MAAMC,EAAqB,IAE3B,MAAMC,UAA0B,oBAI/B,cACCnf,QAHM,KAAAof,QAAUrd,SAASC,cAAc,YAKvC7B,KAAKif,QAAQvc,aAAa,cAAe,QACzC1C,KAAKif,QAAQvc,aAAa,aAAc,mBACxC1C,KAAKif,QAAQvc,aAAa,WAAY,MAEtC1C,KAAKif,QAAQtc,MAAMC,YAAY,WAAY,YAC3C5C,KAAKif,QAAQtc,MAAMC,YAAY,MAAO,UACtC5C,KAAKif,QAAQtc,MAAMC,YAAY,QAAS,QACxC5C,KAAKif,QAAQtc,MAAMC,YAAY,SAAU,QACzC5C,KAAKif,QAAQtc,MAAMC,YAAY,OAAQ,KACvC5C,KAAKif,QAAQtc,MAAMC,YAAY,WAAY,UAC3C5C,KAAKif,QAAQtc,MAAMC,YAAY,aAAc,eAC7C5C,KAAKif,QAAQtc,MAAMC,YAAY,aAAc,IAAK,aAClD5C,KAAKif,QAAQtc,MAAMC,YAAY,SAAU,IAAK,aAC9C5C,KAAKif,QAAQtc,MAAMC,YAAY,UAAW,KAC1C5C,KAAKif,QAAQtc,MAAMC,YAAY,YAAa,cAC5C5C,KAAKif,QAAQtc,MAAMC,YAAY,SAAU,KAGzChB,SAASuF,KAAKlF,YAAYjC,KAAKif,SAGzB,UAEN,MAAMC,EAAUlf,KAAKC,SAASC,cAAc,YAC5C,IAAIif,EAAgBnM,OAAOoM,iBAAiBF,GAE5C,MAAMG,EAAW,CAChBC,MACC/G,SAAS4G,EAAcI,iBAAiB,sBAAuB,IAC/DhH,SAAS4G,EAAcI,iBAAiB,iBAAkB,IAC1DhH,SAAS4G,EAAcI,iBAAiB,gBAAiB,IACzDhH,SAAS4G,EAAcI,iBAAiB,qBAAsB,IAC/DC,OACCjH,SAAS4G,EAAcI,iBAAiB,oBAAqB,IAC7DhH,SAAS4G,EAAcI,iBAAiB,eAAgB,IACxDhH,SAAS4G,EAAcI,iBAAiB,kBAAmB,IAC3DhH,SAAS4G,EAAcI,iBAAiB,uBAAwB,KAG5DE,EAAiBlH,SAAS4G,EAAcI,iBAAiB,cAAe,IACxEG,EAAcnH,SAAS4G,EAAcI,iBAAiB,UAAW,IACjEI,EAAYC,KAAK9W,IAAI2W,EAAgBC,GAAeL,EAASG,OAGnE,IAAIK,EAAYtH,SAAS4G,EAAcI,iBAAiB,cAAe,IACvEM,EAAYA,GAAaA,EAAY,EAAIA,EAAYd,EAGrDG,EAAQvc,MAAMC,YAAY,SAAU,QAEpC,MAAMkd,EAAS9f,KAAKif,QACpB,SAASc,IACRC,sBAAsB,KACrBb,EAAgBnM,OAAOoM,iBAAiBF,GAExC,MAAMI,EAAQ,GAAG/G,SAAS4G,EAAcI,iBAAiB,SAAU,IAAMF,EAASC,UAClFQ,EAAOnd,MAAMC,YAAY,QAAS0c,GAClCQ,EAAOnd,MAAMC,YAAY,aAAcuc,EAAcI,iBAAiB,eAEtEO,EAAOrd,MAAQyc,EAAQzc,MAEvB,IAAI,aAAEwd,GAAiBH,EACnBI,EAAW,SAEXD,EAAeJ,GAClBI,EAAeJ,EACfK,EAAW,UACDD,EAAeN,IACzBM,EAAeN,GAGhBT,EAAQvc,MAAMC,YAAY,aAAcsd,GAExCD,GAAgBZ,EAASG,OACrBjH,SAAS4G,EAAcI,iBAAiB,UAAW,MAAQU,GAC9Df,EAAQvc,MAAMC,YAAY,SAAU,GAAGqd,SAK1CjN,OAAO7M,iBAAiB,SAAU4Z,GAClCb,EAAQ/Y,iBAAiB,UAAW4Z,GAEpC/f,KAAKQ,OAAO2f,IAAI,WAAY,KACvBngB,KAAKK,OACPL,KAAKif,QAAgB3e,YAAW,GAEjCN,KAAKif,QAAQ1e,SAEdyS,OAAO5N,oBAAoB,SAAU2a,GACrCb,EAAQ9Z,oBAAoB,UAAW2a,KAIxC,MAAMK,EAAS,CACd,cACA,YACA,cACA,aACA,iBACA,cACA,iBACA,eACA,cACA,eAGD,IAAK,MAAMzd,KAASyd,EACnBpgB,KAAKif,QAAQtc,MAAMC,YAAYD,EAAOwc,EAAcI,iBAAiB5c,KAKjE,MAAMoH,EAA0B,CACtC5H,KAAM,QACNgH,MAAO,CAAEC,UAAW,IAAMC,YAAa,IACvC,OAAO/G,GACN,MAAM+d,EAAW/d,EAAEge,iBAMnB,OAJAD,EAAS1d,MAAMC,YAAY,WAAY,UACvCyd,EAAS1d,MAAMC,YAAY,aAAc,UACzCyd,EAAS1d,MAAMC,YAAY,YAAa,cAEjCyd,GAERhd,WAAY2b,I,kCCxIb,wGAOA,MAAMuB,UAAyB,oBAA/B,c,oBAeW,KAAAC,YAAa,EAXhB,kBAAkBlf,GACxB,OAAOA,EAAOC,eAAe,aAA+B,aAAhBD,EAAOa,KAG7C,sBAAsBb,GAC5B,OAAOA,EAAO+H,aACbkX,EAAiBE,WAAWnf,GAC1Bif,EAAiBG,oBACjBH,EAAiBI,kBAYrB,WACC,GAA0B,iBAAf3gB,KAAK4gB,MAAoB,CACnC,MAAM,KAAE9d,EAAO,QAAW9C,KAAKsB,OAC/BtB,KAAK4gB,MAAQ9d,EAEd,OAAO9C,KAAK4gB,MAGb,YACC,GAA2B,iBAAhB5gB,KAAK6gB,OAAqB,CACpC,MAAM,MAAEpe,EAAQ,SAAYzC,KAAKsB,OACjCtB,KAAK6gB,OAASpe,EAEf,OAAOzC,KAAK6gB,OAKb,iBACC,OAAON,EAAiBE,WAAWzgB,KAAKsB,QAGlC,UACN,GAAItB,KAAK8gB,SAER,YADA9gB,KAAK+gB,WAAa/gB,KAAKmD,MAIxB,MAAMc,EAAYjE,KAAKC,SAASC,cAAc,qBACxC8gB,EAAWhhB,KAAKC,SAASC,cAAc,oBACvC+gB,EAAejhB,KAAKC,SAASC,cAAc,yBAC3CoJ,EAAQtJ,KAAKC,SAASC,cAAc,SAEpCghB,EAAmB,KACpB5X,EAAM7G,MACTzC,KAAK+gB,WAAa/gB,KAAKmhB,cAAcC,EAAOC,OAAO/X,EAAM7G,QAEzDzC,KAAK+gB,WAAa,IAAU/gB,KAAKmD,MAElCnD,KAAKQ,OAAOgN,eAsDb,IAAI4T,EAnDJ9X,EAAMgY,QAAU,KACfJ,KAGD5X,EAAMiY,OAAS/O,IACS,MAAnBA,EAAEgP,gBACLlY,EAAMmY,QAAS,EACfR,EAAaQ,QAAS,EACtBT,EAASlf,UAAUvB,OAAO,gBAC1BygB,EAASlf,UAAUvB,OAAO,qBAI5B0D,EAAUyd,QAAUlP,IACfA,EAAEoM,kBAAkB+C,oBAIpBnP,EAAEoM,kBAAkBgD,oBACvBtY,EAAMmY,QAAS,GAGhBnY,EAAMmY,QAAUnY,EAAMmY,OACtBT,EAASlf,UAAU+f,OAAO,eAAgBvY,EAAMmY,QAChDT,EAASlf,UAAU+f,OAAO,kBAAmBvY,EAAMmY,QAE9CnY,EAAMmY,QACVnY,EAAMwY,QAGPb,EAAaQ,OAASnY,EAAMmY,SAG7BR,EAAaS,QAAUlP,IACtB,IAAI,OAAEoM,GAAWpM,EACO,UAApBoM,EAAOmD,WACVnD,EAASA,EAAOvY,eAIhBuY,aAAkBoD,gBAClBpD,EAAO9c,UAAUkV,SAAS,gBAC1B4H,EAAOvY,yBAAyB2b,gBAChCpD,EAAOvY,cAAcvE,UAAUkV,SAAS,0BAGxC1N,EAAM7G,MAAQ,GACdzC,KAAKiiB,OAAOrD,EAAOsD,QAAQzf,SAK7BzC,KAAKQ,OAAOC,iBACX,IAAMT,KAAKmD,KACXwT,IACCyK,EAAS,IAAI,IAAKzK,EAAG,CACpBwL,YAAY,EACZC,UAAW,GACXhO,SAAU,EACViO,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,EACpBvhB,KAAM,CAAChB,KAAK8C,QAGboe,MAKI,aACoC,mBAA/BlhB,KAAKwiB,uBACfxiB,KAAKwiB,wBAIA,eAAe/f,GACrB,GAAIiM,MAAMC,QAAQlM,GACjB,OAGD,GAAa,MAATA,EACH,OAAO8d,EAAiBkC,eAAeziB,KAAKsB,QAI7C,MAAMsX,EAAO5Y,KAAKmD,KAAKuf,KAAKvhB,GAAKA,EAAEnB,KAAKyC,QAAUA,GAClD,OAAe,MAARmW,EAAe5Y,KAAK2iB,QAAU/J,EAAK5Y,KAAK8C,MAGzC,OAAO8V,GAEb5Y,KAAKU,QAAUV,KAAKU,QAAQ6S,OAAQpS,GAAWA,GAAKyX,GACpD5Y,KAAK+gB,WAAa/gB,KAAKmhB,cAAcnhB,KAAKmD,MAGpC,SACFnD,KAAK4iB,WAAalU,MAAMC,QAAQ3O,KAAKU,UAAYV,KAAKU,QAAQN,OAAS,OAAqByF,IAAjB7F,KAAKU,WACnFV,KAAKU,QAAUV,KAAK4iB,WAAa,QAAK/c,GAEvC7F,KAAK+gB,WAAa/gB,KAAKmhB,cAAcnhB,KAAKmD,MAGpC,OAAOV,GACTzC,KAAK4iB,WACR5iB,KAAKU,QAAUgO,MAAMC,QAAQ3O,KAAKU,SAC/BV,KAAKU,QAAQ8O,SAAS/M,GACrBzC,KAAKU,QACLV,KAAKU,QAAQub,OAAOxZ,GACrB,CAACA,GAEJzC,KAAKU,QAAU+B,EAGhBzC,KAAK+gB,WAAa/gB,KAAKmhB,cAAcnhB,KAAKmD,MAC1CnD,KAAKQ,OAAOgN,cAGL,cAAcrK,GAErB,OAAOuL,MAAMC,QAAQ3O,KAAKU,SACvByC,EAAKoQ,OAAOpS,GAAKnB,KAAKU,QAAQQ,MAAO2hB,GAAW1hB,EAAEnB,KAAKyC,QAAUogB,IACjD,MAAhB7iB,KAAKU,QACJ,IAAUyC,GACVA,EAAKoQ,OAAOpS,GAAKA,EAAEnB,KAAKyC,QAAUzC,KAAKU,UA7LrB,EAAAigB,kBAAoB,qBACpB,EAAAD,oBAAsB,gCAiMvC,MAAM5W,EAA6B,CACzC3H,KAAM,QACN,OAAOG,GACN,MAAM2f,EAAS3f,EAAEqB,kBAChB,SACA,CAAC,eAAgB,eAAgB,UACjC,CACC,CAAC,eAAgB,6BACjB,CAAC,aAAc,6BACf,CAAC,WAAY,mBAITif,EAAarC,EAAiBE,WAAWzgB,KAAKsB,QACpD,GAAIshB,EACHX,EAAOvf,aAAa,WAAY,YAC1B,CACN,MAAM2G,EAAc/G,EAAEqB,kBAAkB,UAExC0F,EAAY3G,aAAa,cAAe,QACxC2G,EAAYvG,KAAOyd,EAAiBkC,eAAeziB,KAAKsB,QACxD+H,EAAY5G,MAAQ,GAEpBwf,EAAOhgB,YAAYoH,GAGpB,GAAI,IAAUyZ,WAMb,OALAb,EAAOngB,UAAUvB,OAAO,UACxB0hB,EAAOvf,aACN,aACA,kGAEMuf,EAGR,MAAMc,EAAQzgB,EAAEqB,kBAAkB,MAAO,CAAC,2BACpCqf,EAAY1gB,EAAEqB,kBAAkB,MAAO,CAAC,cAAeif,EAAa,WAAa,WACjFnS,EAAWnO,EAAEqB,kBAAkB,MAAO,CAAC,gBAEvCsf,EAAM3gB,EAAEqB,kBAAkB,SAAU,CAAC,iBAC1C,CACC,CAAC,qBAAsB,0DACvB,CAAC,WAAY,mBAIf,GAAIif,EAAY,CACf,MAAMM,EAAOD,EAAIE,YACjBD,EAAKxgB,aAAa,qBAAsB,iDACxCwgB,EAAKxgB,aAAa,WAAY,sBAE9B+N,EAAS/N,aAAa,YAAa,yCACnC+N,EAAS/N,aAAa,gBAAiB,QACvC+N,EAAStM,UAAY,iCAAiC+e,EAAK7G,YAE3D,MAAMhT,EAAc/G,EAAEqB,kBAAkB,MAAO,CAAC,cAAe,eAAgB,CAAC,CAAC,QAAS,yDAC1F0F,EAAYrH,UAAYue,EAAiBkC,eAAeziB,KAAKsB,QAE7D0hB,EAAU/gB,YAAYoH,QAEtBoH,EAAS/N,aAAa,WAAY,4CAClC+N,EAASzO,UAAY,0CAGtB,MAAM4W,EAAOtW,EAAEqB,kBAAkB,MAAO,CAAC,eACxC,CACC,CAAC,YAAa,4CACd,CAAC,qBAAsB,yBACvB,CAAC,OAAQ,YAGXiV,EAAK5W,UAAY,uBAEjB,MAAMmB,EAAOb,EAAEqB,kBAAkB,MAAO,CAAC,wBACxC,CACC,CAAC,MAAO,OACR,CAAC,OAAQ,WACT,CAAC,SAAU,UAIP2F,EAAQhH,EAAEqB,kBAAkB,QAAS,CAAC,gBAC3C,CACC,CAAC,OAAQ,QACT,CAAC,eAAgB,OACjB,CAAC,iBAAkB,OACnB,CAAC,aAAc,SACf,CAAC,OAAQ,WACT,CAAC,oBAAqB,QACtB,CAAC,cAAe,IAChB,CAAC,aAAc,eACf,CAAC,SAAU,UAIPxB,EAAO,UAAUygB,EAAa,WAAa,QAC3C3e,EAAY3B,EAAEqB,kBAAkB,MAAO,CAAC,oBAC7C,CACC,CAAC,YAAaxB,GACd,CAAC,OAAQ,YACT,CAAC,WAAY,KACb,CAAC,oBAAqB,QACtB,CAAC,gBAAiB,QAClB,CAAC,gBAAiB,SAClB,CAAC,MAAO,OACR,CAAC,eAAgB,GAAGA,wBACpB,CAAC,aAAc,GAAGA,0BAId6e,EAAW1e,EAAEqB,kBAAkB,MAAO,CAAC,kBAAmB,kBAAmB,gBAAiB,CAAC,CAAC,gBAAiB,WAevH,OAbAqf,EAAU/gB,YAAYwO,GACtBuS,EAAU/gB,YAAYghB,GACtBF,EAAM9gB,YAAYggB,GAClBc,EAAM9gB,YAAY+gB,GAElB7f,EAAKlB,YAAY2W,GAEjBoI,EAAS/e,YAAYqH,GACrB0X,EAAS/e,YAAYkB,GAErBc,EAAUhC,YAAY8gB,GACtB9e,EAAUhC,YAAY+e,GAEf/c,GAERZ,WAAYkd,EACZrd,SAAU,CACTC,KAAM,O,kCC3UR,8SAYO,MAAMigB,GAAM,IAAI,KACrBC,cAAc,UACdA,cAAc,KACdC,gBAAgB,CAChB,IACA,IACA,MAEAzU,mBAAmB,CACnB,oBAAoB2E,EAAUkC,GAC7B,MAAM,OAAE6N,EAAM,WAAEC,EAAU,IAAE9P,GAAQF,EAC9BI,QAAaJ,EAAS+B,OAE5B,OAAQgO,GACP,KAAK,IAAeE,SACnBL,EAAItc,IAAIH,MAAM,UAAU+M,gBACxB,MACD,KAAK,IAAegQ,WACC,iBAAT9P,EACVwP,EAAItc,IAAIH,MAAMiN,GACI,MAARA,GAAoC,oBAApBA,EAAK6E,YAC/B2K,EAAItc,IAAIH,MAAM5F,OAAOC,KAAK4S,GAAMN,IAAInS,GAAK,GAAGA,MAAMyS,EAAKzS,MAAMwO,KAAK,SAEnE,MACD,KAAK,IAAegU,aACpB,KAAK,IAAeC,UACpB,KAAK,IAAeC,oBACnBT,EAAItc,IAAIkB,QAAQwb,GAChB,MACD,KAAM,EACLJ,EAAItc,IAAIkB,QAAQ,qBAChB,MACD,QACCob,EAAItc,IAAIH,MAAM,mBAAmB+M,+BAAiC6P,MAIpE,OAAO7N,M,kCCjDV,8DAGO,MAAMoO,EAAb,cAsBiB,KAAArS,SAAWzR,KAAK+jB,SAASjf,QAAQ,WAAY,IArBtD,kBACN,OAAO,cAGD,gBACN,OAAO,cAMD,gBACN,MAAO,uCAAuCA,QAAQ,QAASkf,IAE9D,MAAMC,EAAoB,GAAhBrE,KAAKsE,SAAgB,EAG/B,OAFgB,MAANF,EAAYC,EAAS,EAAJA,EAAU,GAE5BxL,SAAS,MAMb,SACN,OAAOqL,EAAUC,SAGlB,eACC,OAAO,cAGR,aACC,OAAOD,EAAUK,SAcX,qBAAqBvL,GAC3B,MAAMvB,EAAQuB,EAAKvB,MAAM,aACzB,OAAOA,EAAMnW,MAAMC,GAAkB,IAAbA,EAAEf,QACvBwY,EACAvB,EACC/D,IAAInS,GAAKA,EAAEijB,QACX9Q,IAAInS,GAES,IAAbA,EAAEf,QAA8B,IAAbe,EAAEf,QAAgC,MAAhBe,EAAE8Y,OAAO,GAE1C9Y,EAAE2V,cAAgB,IAClB3V,EAAE8Y,OAAO,GAAGnD,cAAgB3V,EAAE+Y,UAAU,IAE5CvK,KAAK,KACL7K,QACA,0BACA,EAAEuf,EAAOC,KACG,MAAXA,EACGD,EAAQC,EACRD,GAEJvf,QACA,eACA,EAAEuf,EAAOC,KAAWC,KACnB,GAAGF,KAASC,EAAOxN,gBAAgByN,EAAK5U,KAAK,OAE9C7K,QAAQ,MAAO,Q,kCC5ErB,iJ,kCCCA,4GAWO,MAAM0f,UAAqB,IAiB1B,eAAeC,GACrBzkB,KAAK+G,KAAKuD,QAAQ,yBAAyBma,gBAAsBvc,KAAK,IAAM8K,OAAO5I,KAAK,UAAUqa,OAkD7F,SAASC,EAA2CrW,EAAmBsW,GAQ7E,OADA,YAAStW,GACF,cAAkCA,EAwBxC,YACCpO,EACOO,EACAwK,GAEPnL,QAHO,KAAAW,SACA,KAAAwK,YA1BD,KAAAjE,KAAO4d,EAAO7d,IACd,KAAAkG,MAAQ2X,EAAOrW,KACf,KAAA9K,UAAYmhB,EAAOpW,SA4BzBvO,KAAKC,SAAWA,EAAS,GACzBD,KAAKsB,OAAS,IAAI,IAAatB,KAAKC,SAAU0kB,EAAOxb,OACrDnJ,KAAK4kB,OAAS5kB,KAAKgL,UAAU8B,IAAI,UAzBlC,cACC,OAAO6X,EAAOpZ,SAEf,mBACC,OAAOvL,KAAK6L,QAAQoB,QAErB,oBACC,OAAOjN,KAAK6L,QAAQF,OAErB,gBACC,OAAO3L,KAAK6L,QAAQD,WAErB,gBACC,OAAO5L,KAAK6L,QAAQjB,a,kGCvGvB,IAAaia,EAAb,MAyBC,aAAY,KACXC,EAAO,SAAQ,IACfC,EAAM,GAAE,SACRna,EAAW,IACc,IACd,MAAPma,GAA8B,IAAfA,EAAI3kB,SACtB2kB,EAAM,cAEP/kB,KAAK+kB,IAAMA,EAEX/kB,KAAKiN,QAAkB,eAAR8X,EACf/kB,KAAK2L,OAAiB,gBAARoZ,EACd/kB,KAAK4L,WAAqB,YAARmZ,EAElB/kB,KAAK8kB,KAAOA,EACZ9kB,KAAK4K,SAAWA,IAxCLia,EAAW,aADvB,I,iCA8BU,mB,EAAA,oBAAPG,kBAAO,YA7BEH,K","file":"app.7fad99.js","sourcesContent":["import isEqual from 'lodash/isEqual';\nimport { Indexed } from '@ledge/types';\nimport { NgController } from '../../controller';\n\nexport class NgInputController<T = any> extends NgController {\n\tpublic ngModel: any;\n\tpublic ngModelCtrl: NgModelController<T>;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tsetTimeout(() => {\n\t\t\tconst $contain = this.$element.querySelector('[ng-transclude=\"contain\"]');\n\t\t\tif ($contain != null && $contain.children.length === 0) {\n\t\t\t\tif (this.isIE11) {\n\t\t\t\t\t($contain as any).removeNode(true);\n\t\t\t\t} else {\n\t\t\t\t\t$contain.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.$scope.$watchCollection(\n\t\t\t\t() => this.ngModel,\n\t\t\t\t(curr: any, prev: any) => {\n\t\t\t\t\tif (isEqual(curr, prev)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ngModelCtrl.$setViewValue(curr);\n\t\t\t\t\tconst isValid = Object\n\t\t\t\t\t\t.keys(this.ngModelCtrl.$validators)\n\t\t\t\t\t\t.every(x => {\n\t\t\t\t\t\t\treturn this.ngModelCtrl.$validators[x](curr, curr);\n\t\t\t\t\t\t});\n\t\t\t\t\tif (isValid) {\n\t\t\t\t\t\tthis.ngModelCtrl.$commitViewValue();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n}\n\nexport interface NgModelController<T = any> {\n\t$viewValue: T;\n\t$modelValue: T;\n\n\t$error: { [validationErrorKey: string]: boolean };\n\t$name?: string;\n\n\treadonly $touched: boolean;\n\treadonly $untouched: boolean;\n\n\t$validators: {\n\t\t/**\n\t\t * viewValue is any because it can be an object that is called in the view like $viewValue.name:$viewValue.subName\n\t\t */\n\t\t[index: string]: (modelValue: any, viewValue: any) => boolean;\n\t};\n\n\t$pending?: { [validationErrorKey: string]: boolean };\n\treadonly $pristine: boolean;\n\treadonly $dirty: boolean;\n\treadonly $valid: boolean;\n\treadonly $invalid: boolean;\n\n\t/**\n\t * Documentation states viewValue and modelValue to be a string but other types do work and it's common to use them.\n\t */\n\t$setViewValue(value: any, trigger?: string): void;\n\t$commitViewValue(): void;\n\t$rollbackViewValue(): void;\n\t$processModelValue(): void;\n\t$overrideModelOptions(options: NgModelOptions): void;\n\n\t$render(): void;\n\t$validate(): void;\n\t$setDirty(): void;\n\t$setPristine(): void;\n\t$setTouched(): void;\n\t$setUntouched(): void;\n\t$setValidity(validationErrorKey: string, isValid: boolean): void;\n\n\t$isEmpty(value: any): boolean;\n}\n\n/**\n * Allows tuning how model updates are done.\n * @see https://docs.angularjs.org/api/ng/directive/ngModelOptions\n */\nexport interface NgModelOptions {\n\tupdateOn?: string;\n\tdebounce?: number | Indexed<number>;\n\tallowInvalid?: boolean;\n\tgetterSetter?: boolean;\n\ttimezone?: string;\n}\n","import { NgInputController, NgInputOptions } from './shared';\n\nclass RadioListController extends NgInputController {\n\tpublic $postLink() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.$attrs.hasOwnProperty('required')) {\n\t\t\t\tconst fieldset = this.$element.closest('fieldset');\n\n\t\t\t\tif (fieldset != null) {\n\t\t\t\t\tconst legend = fieldset.querySelector('legend');\n\n\t\t\t\t\tif (legend != null) {\n\t\t\t\t\t\tconst span = document.createElement('span');\n\t\t\t\t\t\tspan.classList.add('text-danger');\n\t\t\t\t\t\tspan.innerText = ' *';\n\t\t\t\t\t\tlegend.appendChild(span);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const radioList: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst radio = h.createInput('radio');\n\t\tconst { value = 'Value' } = this.$attrs;\n\n\t\tradio.setAttribute('ng-value', `item.${value}`);\n\t\tradio.setAttribute('ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t\tradio.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\tthis.$template.setAttribute('ng-repeat', 'item in $ctrl.list track by $index');\n\n\t\treturn radio;\n\t},\n\trenderLabel() {\n\t\tconst { text = 'Text' } = this.$attrs;\n\t\tconst labelText = document.createTextNode(`{{item.${text}}}`);\n\n\t\tthis.$label.appendChild(labelText);\n\t\tthis.$label.setAttribute('ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}_{{$index}}');\n\t},\n\tbindings: {\n\t\tlist: '<',\n\t\tngChecked: '<',\n\t},\n\tcontroller: RadioListController,\n};\n","// tslint:disable:no-magic-numbers\nimport anime from 'animejs';\nimport { NgService } from './service';\nimport { NgRenderer } from './renderer';\n\ntype LogType = '$log' | '$warn' | '$error' | '$info' | '$success';\nenum LogTypeToastBackgrounds {\n\t$log = 'white',\n\t$success = 'success',\n\t$info = 'info',\n\t$warn = 'warning',\n\t$error = 'danger',\n}\n\nexport class NgToast {\n\tprotected type: LogType;\n\tprotected readonly toast: HTMLDivElement;\n\tprotected readonly toastHeader: HTMLDivElement;\n\tprotected readonly toastBody: HTMLDivElement;\n\tprotected readonly toastHeaderTimestamp: HTMLElement;\n\n\tconstructor(protected readonly $renderer: NgRenderer, options: {\n\t\ttext: string,\n\t\ttype: LogType,\n\t\tcontainer: HTMLElement,\n\t}) {\n\t\tthis.toast = this.$renderer.createHtmlElement('div', ['toast', 'row', 'justify-content-between', 'w-100'], [['role', 'alert'], ['aria-live', 'assertive'], ['aria-atomic', 'true']]);\n\t\tthis.toast.style.setProperty('cursor', 'pointer');\n\n\t\tthis.toastBody = this.$renderer.createHtmlElement('div', ['toast-body', 'h5', 'col', 'mb-0', 'pb-3']);\n\t\tthis.toastHeader = this.$renderer.createHtmlElement('div', ['toast-header']);\n\t\tthis.toastHeader.style.setProperty('border-bottom', 'none');\n\n\t\tthis.toastHeaderTimestamp = this.$renderer.createHtmlElement('strong', ['text-dark']);\n\n\t\tthis.toastHeader.appendChild(this.toastHeaderTimestamp);\n\t\tthis.toast.appendChild(this.toastHeader);\n\t\tthis.toast.appendChild(this.toastBody);\n\n\t\tthis.setBodyText(options.text);\n\t\tthis.setType(options.type);\n\n\t\toptions.container.appendChild(this.toast);\n\t}\n\n\t/**\n\t * Append a child element to the toast element\n\t *\n\t * @param el The element to append\n\t */\n\tpublic appendChild(el: HTMLElement) {\n\t\tthis.toast.appendChild(el);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Set the inner HTML of the toast's body element\n\t *\n\t * @param text The HTML to set\n\t */\n\tpublic setBodyText(text: string) {\n\t\tthis.toastBody.innerHTML = text;\n\t}\n\n\t/**\n\t * Change the look & feel of the toast based on its associated log type\n\t *\n\t * @param type The log type of toast\n\t */\n\tpublic setType(type: LogType) {\n\t\tif (this.type != null) {\n\t\t\tthis.toast.classList.remove(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\t\t}\n\n\t\tthis.type = type;\n\t\tthis.toast.classList.add(`bg-${LogTypeToastBackgrounds[this.type]}`);\n\n\t\tif (type === '$log') {\n\t\t\tthis.toastHeader.classList.add('bg-dark');\n\t\t\tthis.toastHeader.style.setProperty('opacity', '0.75');\n\t\t\tthis.toastHeaderTimestamp.classList.remove('text-dark');\n\t\t\tthis.toastHeaderTimestamp.classList.add('text-white');\n\t\t} else if (type !== '$warn') {\n\t\t\tthis.toast.classList.add('text-white');\n\t\t}\n\t}\n\n\t/**\n\t * Show the toast\n\t *\n\t * @param timeout Length in ms before toast disappears (`false` to set permanently)\n\t * @param container Optional container override\n\t */\n\tpublic show(timeout: false | number, container?: HTMLElement) {\n\t\tif (container != null) {\n\t\t\tthis.remove();\n\t\t\tcontainer.appendChild(this.toast);\n\t\t}\n\n\t\tanime({\n\t\t\ttargets: this.toast,\n\t\t\ttranslateX: [500, 0],\n\t\t\tduration: 1000,\n\t\t\teasing: 'easeOutQuint(0.5, 1)',\n\t\t\tbegin: () => {\n\t\t\t\tthis.toastHeaderTimestamp.innerText = new Date().toLocaleTimeString(navigator.language).replace(/(:\\d{2})(?=\\s[AP]M$)/, '');\n\t\t\t\tthis.toast.style.setProperty('opacity', '1');\n\t\t\t},\n\t\t});\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst hideAnimation = anime({\n\t\t\t\ttargets: this.toast,\n\t\t\t\ttranslateX: [0, 500],\n\t\t\t\tduration: 1000,\n\t\t\t\tautoplay: false,\n\t\t\t\teasing: 'easeInQuint(0.5, 1)',\n\t\t\t\tcomplete: () => {\n\t\t\t\t\tthis.toast.removeEventListener('click', hideAnimation.play);\n\t\t\t\t\tthis.toast.removeEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\t\t\tthis.toast.removeEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t\t\t\tthis.remove();\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst isAutoClose = typeof timeout === 'number' && Number.isInteger(timeout);\n\t\t\tconst makeTimeout = () => (setTimeout as typeof window['setTimeout'])(hideAnimation.play, timeout as number);\n\n\t\t\tlet autoCloseId = isAutoClose ? makeTimeout() : undefined;\n\t\t\tlet wasClosing = false;\n\n\t\t\tconst resetAnimationOnMouseover = () => {\n\t\t\t\twasClosing = hideAnimation.progress > 0;\n\n\t\t\t\tclearTimeout(autoCloseId);\n\t\t\t\tautoCloseId = undefined;\n\n\t\t\t\thideAnimation.restart();\n\t\t\t\thideAnimation.pause();\n\t\t\t};\n\n\t\t\tconst resumeAnimationOnMouseout = () => {\n\t\t\t\tif (wasClosing) {\n\t\t\t\t\thideAnimation.play();\n\t\t\t\t} else if (isAutoClose && autoCloseId === undefined) {\n\t\t\t\t\tautoCloseId = makeTimeout();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.toast.addEventListener('click', hideAnimation.play);\n\t\t\tthis.toast.addEventListener('mouseover', resetAnimationOnMouseover);\n\t\t\tthis.toast.addEventListener('mouseout', resumeAnimationOnMouseout);\n\t\t});\n\t}\n\n\t/**\n\t * Hide the toast\n\t */\n\tpublic hide() {\n\t\tthis.toast.click();\n\t}\n\n\t/**\n\t * Remove the toast from its container\n\t */\n\tpublic remove() {\n\t\tif (this.toast.parentElement != null) {\n\t\t\tthis.toast.parentElement.removeChild(this.toast);\n\t\t}\n\t}\n}\n\n// tslint:disable:no-console\nexport class NgConsole extends NgService {\n\t/**\n\t * Invokes `Console.prototype.debug`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $debug(...items: any[]) {\n\t\tconsole.debug(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.error`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $error(...items: any[]) {\n\t\tconsole.error(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.info`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $info(...items: any[]) {\n\t\tconsole.info(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.warn`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $warn(...items: any[]) {\n\t\tconsole.warn(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $log(...items: any[]) {\n\t\tconsole.log(...items);\n\t}\n\n\t/**\n\t * Invokes `Console.prototype.log`\n\t *\n\t * @param items list of items to log\n\t */\n\tpublic $success(...items: any[]) {\n\t\tthis.$log(...items);\n\t}\n}\n// tslint:enable:no-console\n\nexport class NgLogger extends NgConsole {\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly toasts: NgToast[] = [];\n\n\tconstructor(private $renderer: NgRenderer, private isProd = false) {\n\t\tsuper();\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['position-fixed']);\n\t\tthis.container.style.setProperty('top', '0.5rem');\n\t\tthis.container.style.setProperty('right', '-1.5rem');\n\t\tthis.container.style.setProperty('width', '100%');\n\t\tthis.container.style.setProperty('max-width', '23rem');\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\t/**\n\t * Clear all active notifications\n\t */\n\tpublic clear() {\n\t\tthis.toasts.forEach(x => x.hide());\n\t}\n\n\t/**\n\t * Prompt the user to confirm intent for a previous action\n\t *\n\t * @param msg Confirmation message\n\t */\n\tpublic confirm(msg = 'Please confirm your action') {\n\t\tconst okBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-success', 'rounded-0']);\n\t\tokBtn.innerText = 'Yes';\n\t\tconst cancelBtn = this.$renderer.createHtmlElement('button', ['btn', 'w-50', 'btn-dark', 'rounded-0']);\n\t\tcancelBtn.innerText = 'No';\n\n\t\tconst footer = this.$renderer.createHtmlElement('div', ['w-100']);\n\t\tfooter.appendChild(cancelBtn);\n\t\tfooter.appendChild(okBtn);\n\n\t\tconst toast = this.notify(msg, '$log', false);\n\t\ttoast.appendChild(footer);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst removeListeners = () => {\n\t\t\t\tokBtn.removeEventListener('click', ok);\n\t\t\t\tcancelBtn.removeEventListener('click', cancel);\n\t\t\t};\n\n\t\t\tconst ok = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tconst cancel = () => {\n\t\t\t\ttoast.hide();\n\t\t\t\tremoveListeners();\n\t\t\t\treject();\n\t\t\t};\n\n\t\t\tokBtn.addEventListener('click', ok);\n\t\t\tcancelBtn.addEventListener('click', cancel);\n\t\t});\n\t}\n\n\t/**\n\t * Display an error notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (false by default)\n\t */\n\tpublic error(text: string, isTemporary = false) {\n\t\tthis.notify(text, '$error', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display an informational notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic info(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$info', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a success notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic success(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$success', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification\n\t *\n\t * @param text Display text\n\t * @param isTemporary Whether the notification should disappear automatically (true by default)\n\t */\n\tpublic warning(text: string, isTemporary = true) {\n\t\tthis.notify(text, '$warn', isTemporary && undefined);\n\t}\n\n\t/**\n\t * Display a warning notification (disabled when `process.env.NODE_ENV === 'production'`)\n\t *\n\t * @param text Display text\n\t */\n\tpublic devWarning(text: string) {\n\t\tif (this.isProd === false) {\n\t\t\tthis.warning(`[DEV] ${text}`, false);\n\t\t}\n\t}\n\n\t/**\n\t * Show a customizable notification to the user\n\t *\n\t * @param text Display text\n\t * @param type Display type\n\t * @param timeout Length in ms before notification disappears (`false` to set permanently)\n\t * @param buttons Interaction points for the user\n\t */\n\tpublic notify(text: string, type: LogType, timeout: false | number = 2323) {\n\t\tthis[type](`${type}: ${text}`);\n\n\t\tconst toast = new NgToast(this.$renderer, { text, type, container: this.container });\n\t\ttoast.show(timeout).then(() => {\n\t\t\tconst index = this.toasts.findIndex(x => Object.is(x, toast));\n\t\t\tthis.toasts.splice(index, 1);\n\t\t});\n\n\t\tthis.toasts.push(toast);\n\t\treturn toast;\n\t}\n}\n","import { Indexed } from '@ledge/types';\nimport { NgInputController, NgInputOptions } from './shared';\n\nclass TextInputController extends NgInputController {\n\tprivate min: number | undefined;\n\tprivate max: number | undefined;\n\n\tpublic $onInit() {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tif (type === 'number') {\n\t\t\tthis.ngModelCtrl.$validators.minVal = val => {\n\t\t\t\treturn this.min == null || val >= this.min;\n\t\t\t};\n\t\t\tthis.ngModelCtrl.$validators.maxVal = val => {\n\t\t\t\treturn this.max == null || val <= this.max;\n\t\t\t};\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tthis.ngModelCtrl.$validators.pattern = val => {\n\t\t\t\treturn val != null && val.length >= minlength;\n\t\t\t};\n\t\t}\n\t}\n}\n\nconst validators: Indexed<string> = {\n\tminVal: 'Must be greater than or equal to {{$ctrl.min}}',\n\tmaxVal: 'Must be less than or equal to {{$ctrl.max}}',\n};\n\nexport const textInput: NgInputOptions = {\n\ttype: 'input',\n\tcanHaveIcon: true,\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst { type, minlength } = this.$attrs;\n\n\t\tconst input = h.createInput(type);\n\n\t\tconst isRange = type === 'range';\n\t\tif (type === 'number' || isRange) {\n\t\t\tinput.setAttribute('ng-attr-min', '{{$ctrl.min}}');\n\t\t\tinput.setAttribute('ng-attr-max', '{{$ctrl.max}}');\n\t\t\tinput.setAttribute('ng-attr-step', `{{$ctrl.step || '${isRange ? 1 : 'any'}'}}`);\n\t\t}\n\n\t\tif (minlength != null) {\n\t\t\tinput.setAttribute('pattern', `.{${minlength},}`);\n\t\t\tvalidators.pattern = `Input must be at least ${minlength} characters`;\n\t\t}\n\n\t\treturn input;\n\t},\n\tpostRender(h) {\n\t\tif (this.$attrs.type === 'range') {\n\t\t\tconst text = h.createHtmlElement('p', ['text-center', 'lead']);\n\t\t\ttext.textContent = '{{$ctrl.ngModel}}';\n\t\t\tthis.$template.appendChild(text);\n\t\t}\n\t\treturn this.$template;\n\t},\n\tbindings: {\n\t\tmin: '<',\n\t\tmax: '<',\n\t\tstep: '<',\n\t},\n\tvalidators,\n\tcontroller: TextInputController,\n};\n\nexport const htmlInput = { ...textInput };\n","import { checkBox } from './check-box';\nimport { dateInput } from './date-input';\nimport { radioList } from './radio-list';\nimport { selectList } from './select-list';\nimport { textBox } from './text-box';\nimport { htmlInput, textInput } from './text-input';\n\nexport const inputs = {\n\tcheckBox,\n\tdateInput,\n\tradioList,\n\tselectList,\n\ttextBox,\n\thtmlInput,\n\ttextInput,\n};\n\nexport * from './shared';\n","export * from './controller';\nexport * from './options';\nexport * from './service';\n","import { NgController, app } from '../../index';\n\nclass ModalController extends NgController {\n\tpublic title = 'Example Modal';\n\tpublic body = 'Body';\n}\n\nclass AppController extends NgController {\n\tpublic openModal() {\n\t\tapp.modal.open({\n\t\t\tcontroller: ModalController,\n\t\t\ttitle: '{{$ctrl.title}}',\n\t\t\ttemplate: '<p class=\"lead\">{{$ctrl.body}}</p>',\n\t\t});\n\t}\n\n\tpublic openConfirmToast() {\n\t\tthis.$log.confirm('Yes or No?')\n\t\t\t.then(() => this.$log.success('Yes!'))\n\t\t\t.catch(() => this.$log.info('No...'));\n\t}\n}\n\napp\n\t.module\n\t.controller(\n\t\t'AppController',\n\t\tapp.makeComponentController(AppController),\n\t);\n\napp\n\t.configure({ API_HOST: 'api.ng-app.js.org' })\n\t.bootstrap()\n\t.then(() => {\n\t\tapp.log.success('Welcome... to The World...');\n\t});\n","import { Indexed } from '@ledge/types';\nimport { StateService } from '@uirouter/core';\nimport { StateProvider } from '@uirouter/angularjs';\nimport { autobind } from 'core-decorators';\n\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { DEFAULT_REQUEST_TIMEOUT, NgHttp, NgHttpInterceptor, NgHttpOptions } from './http';\nimport { InputService, NgInputOptions } from './inputs';\nimport { NgLogger } from './logger';\nimport { NgModal } from './modal';\nimport { NgInjector, bootstrap, injector, module } from './ng';\nimport { NgAppConfig, NgComponentOptions } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgRouter } from './router';\n\n@autobind\nexport class NgApp {\n\tpublic get module() {\n\t\treturn this.$module;\n\t}\n\n\tpublic get router() {\n\t\treturn this.$router;\n\t}\n\n\tpublic get config() {\n\t\treturn this.$config;\n\t}\n\n\tpublic get components() {\n\t\treturn new Set(this.$components.keys());\n\t}\n\n\tpublic get dependencies() {\n\t\treturn new Set(this.$dependencies);\n\t}\n\n\tpublic get state() {\n\t\treturn this.$injector.get<StateService>('$state');\n\t}\n\n\tpublic get http() {\n\t\tif (this._http == null) {\n\t\t\tthis._http = this.$http({\n\t\t\t\ttimeout: this.$config.IS_PROD ? DEFAULT_REQUEST_TIMEOUT : undefined,\n\t\t\t\tgetConfig: () => this.$config,\n\t\t\t});\n\t\t}\n\t\treturn this._http;\n\t}\n\n\tpublic get log() {\n\t\tif (this._log == null) {\n\t\t\tthis._log = this.$logger();\n\t\t}\n\t\treturn this._log;\n\t}\n\n\tpublic get modal() {\n\t\tif (this._modal == null) {\n\t\t\tthis._modal = this.$modal();\n\t\t}\n\t\treturn this._modal;\n\t}\n\n\tpublic get renderer() {\n\t\tif (this._renderer == null) {\n\t\t\tthis._renderer = this.$renderer();\n\t\t}\n\t\treturn this._renderer;\n\t}\n\n\tpublic readonly $id = '$core';\n\tpublic $injector = injector(['ng']);\n\n\tprotected $dependencies: string[] = [];\n\tprotected $router: NgRouter;\n\tprotected $config: NgAppConfig;\n\n\tprotected readonly $module = module(this.$id, this.$dependencies);\n\tprotected readonly $bootstrap = bootstrap;\n\tprotected readonly $components = new Map<string, NgComponentOptions>();\n\tprotected readonly $httpInterceptors: NgHttpInterceptor[] = [];\n\n\tprivate _http: NgHttp;\n\tprivate _log: NgLogger;\n\tprivate _modal: NgModal;\n\tprivate _renderer: NgRenderer;\n\n\tconstructor() {\n\t\tthis.configure({ })\n\t\t\t.$module\n\t\t\t.config([\n\t\t\t\t'$compileProvider', '$locationProvider', '$qProvider',\n\t\t\t\t(\n\t\t\t\t\t$compileProvider: {\n\t\t\t\t\t\tdebugInfoEnabled(active: boolean): any;\n\t\t\t\t\t\tcommentDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t\tcssClassDirectivesEnabled(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$locationProvider: {\n\t\t\t\t\t\thtml5Mode(active: boolean): any;\n\t\t\t\t\t},\n\t\t\t\t\t$qProvider: {\n\t\t\t\t\t\terrorOnUnhandledRejections(active: boolean): any,\n\t\t\t\t\t},\n\t\t\t\t) => {\n\t\t\t\t\tconst { IS_DEV, IS_STAGING } = this.$config;\n\n\t\t\t\t\t$compileProvider.debugInfoEnabled(!!(IS_DEV || IS_STAGING));\n\t\t\t\t\t$compileProvider.commentDirectivesEnabled(false);\n\t\t\t\t\t$compileProvider.cssClassDirectivesEnabled(false);\n\n\t\t\t\t\t$locationProvider.html5Mode(true);\n\t\t\t\t\t$qProvider.errorOnUnhandledRejections(false);\n\t\t\t\t},\n\t\t\t])\n\t\t\t.config([\n\t\t\t\t'$stateProvider',\n\t\t\t\t($stateProvider: StateProvider) => {\n\t\t\t\t\tif (this.router == null) {\n\t\t\t\t\t\treturn this.log.$warn('No router. Use `app.setRouter(r)` to disable this warning.');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const definition of this.router.getRoutes()) {\n\t\t\t\t\t\t$stateProvider.state(definition);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t])\n\t\t\t.run([\n\t\t\t\t'$injector', '$animate',\n\t\t\t\t($injector: NgInjector, $animate: { enabled(active: boolean): any }) => {\n\t\t\t\t\tthis.$injector = $injector;\n\t\t\t\t\t$animate.enabled(true);\n\t\t\t\t},\n\t\t\t]);\n\t}\n\n\t/**\n\t * Force the application to run an update cycle\n\t */\n\tpublic async forceUpdate() {\n\t\tawait this.$injector.get('$rootScope').$applyAsync();\n\t}\n\n\tpublic async bootstrap({ strictDi }: { strictDi?: boolean; } = { strictDi: true }) {\n\t\tfor (const [name, definition] of this.$components) {\n\t\t\tthis.$module.component(name, definition);\n\t\t}\n\t\tif (this.$router == null) {\n\t\t\tthis.$router = new (class extends NgRouter { })();\n\t\t}\n\n\t\tsetTimeout(() => document.body.classList.add('bootstrapped'));\n\t\treturn this.$bootstrap(document.body, [this.$id], { strictDi });\n\t}\n\n\tpublic configure(config: Partial<NgAppConfig>) {\n\t\tthis.$config = new NgAppConfig(config);\n\t\treturn this;\n\t}\n\n\tpublic setRouter(router: NgRouter) {\n\t\tthis.$router = router;\n\t\treturn this;\n\t}\n\n\tpublic addComponents(components: Map<string, NgComponentOptions> | Indexed<NgComponentOptions>) {\n\t\tconst entries = components instanceof Map\n\t\t\t? components.entries()\n\t\t\t: Object.entries(components);\n\n\t\tfor (let [name, component] of entries) {\n\t\t\tif (this.isInputComponent(component)) {\n\t\t\t\tcomponent = InputService.defineInputComponent(component);\n\t\t\t}\n\n\t\t\tif (typeof component.controller === 'function') {\n\t\t\t\tcomponent.controller = this.makeComponentController(component.controller);\n\t\t\t}\n\n\t\t\tthis.$components.set(name, component);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic isInputComponent(\n\t\tcomponent: NgComponentOptions & { type?: 'input' },\n\t): component is NgInputOptions {\n\t\treturn component.type === 'input';\n\t}\n\n\tpublic addDependency(moduleName: string) {\n\t\tthis.$dependencies.push(moduleName);\n\t\treturn this;\n\t}\n\n\tpublic addDependencies(moduleNames: string[]) {\n\t\tmoduleNames.forEach(moduleName => this.addDependency(moduleName));\n\t\treturn this;\n\t}\n\n\tpublic addHttpInterceptor(interceptor: NgHttpInterceptor) {\n\t\tthis.$httpInterceptors.push(interceptor);\n\t\treturn this;\n\t}\n\n\tpublic makeComponentController<T extends NgController>(ctrl: new () => T) {\n\t\tconst componentCtrl = makeInjectableCtrl<T>(ctrl, {\n\t\t\tlog: this.log,\n\t\t\thttp: this.http,\n\t\t\trenderer: this.renderer,\n\t\t\tconfig: () => this.config,\n\t\t});\n\n\t\ttype NonReadonly<R> = { -readonly [P in keyof R]: R[P] };\n\t\tconst injectable = ['$element', '$scope', '$injector', componentCtrl] as const;\n\t\treturn injectable as NonReadonly<typeof injectable>;\n\t}\n\n\tprotected $modal() {\n\t\treturn new NgModal(\n\t\t\tthis.renderer,\n\t\t\tthis.log,\n\t\t\tthis.http,\n\t\t\tthis.config,\n\t\t\tthis.$injector,\n\t\t);\n\t}\n\n\tprotected $http(options: NgHttpOptions) {\n\t\tif ((typeof options.onFinally === 'function') === false) {\n\t\t\toptions.onFinally = this.forceUpdate;\n\t\t}\n\t\tif (typeof options.getConfig !== 'function') {\n\t\t\toptions.getConfig = () => this.config;\n\t\t}\n\t\tif (Array.isArray(options.interceptors)) {\n\t\t\tfor (const interceptor of options.interceptors) {\n\t\t\t\tthis.addHttpInterceptor(interceptor);\n\t\t\t}\n\t\t}\n\t\t// allow all dataservice instances to share the same interceptor queue\n\t\toptions.interceptors = this.$httpInterceptors;\n\n\t\treturn new NgHttp(options);\n\t}\n\n\tprotected $logger() {\n\t\treturn new NgLogger(this.renderer, this.$config.IS_PROD);\n\t}\n\tprotected $renderer() {\n\t\treturn new NgRenderer();\n\t}\n}\n","import flatpickr from 'flatpickr';\nimport { NgInputController, NgInputOptions } from './shared';\n\nfunction isNumber(n: any): n is number {\n\treturn Number.isInteger(n);\n}\n\nclass DateInputController extends NgInputController {\n\tprivate readonly SUPPORTED_MODES = ['single', 'multiple', 'range'];\n\tprivate minDate?: Date | number | string;\n\tprivate maxDate?: Date | number | string;\n\tprivate flatpickr: flatpickr.Instance;\n\n\tpublic $onInit() {\n\t\tthis.ngModelCtrl.$validators.minDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.minDate)) {\n\t\t\t\t\treturn this.minDate <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.minDate instanceof Date) {\n\t\t\t\t\treturn this.minDate.valueOf() <= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tthis.ngModelCtrl.$validators.maxDate = modelVal => {\n\t\t\tif (modelVal != null) {\n\t\t\t\tif (isNumber(this.maxDate)) {\n\t\t\t\t\treturn this.maxDate >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t\tif (this.maxDate instanceof Date) {\n\t\t\t\t\treturn this.maxDate.valueOf() >= modelVal.valueOf();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst { inline, mode = 'single' } = this.$attrs;\n\t\tif (this.SUPPORTED_MODES.includes(mode) === false) {\n\t\t\tthis.$log.devWarning(`Unsupported date-input \\`mode\\` ('${mode}') for #${this.$element.id}. Expected one of ${this.SUPPORTED_MODES.join(', ')}.`);\n\t\t}\n\n\t\tthis.flatpickr = flatpickr(this.$element, {\n\t\t\tdateFormat: 'M n Y (l)',\n\t\t\tdefaultDate: this.ngModel,\n\t\t\tinline: inline === 'true',\n\t\t\tmode,\n\t\t\tnextArrow: '&raquo;',\n\t\t\tprevArrow: '&laquo;',\n\t\t\tallowInput: true,\n\t\t\tweekNumbers: true,\n\t\t\twrap: true,\n\t\t\tenable: [\n\t\t\t\td => {\n\t\t\t\t\tconst maxDate = Date.parse(this.maxDate as any);\n\t\t\t\t\treturn Number.isNaN(maxDate) || d.valueOf() < maxDate;\n\t\t\t\t},\n\t\t\t\td => {\n\t\t\t\t\tconst minDate = Date.parse(this.minDate as any);\n\t\t\t\t\treturn Number.isNaN(minDate) || d.valueOf() > minDate;\n\t\t\t\t},\n\t\t\t],\n\t\t\tonChange: selected => {\n\t\t\t\tthis.ngModel = selected.length > 1\n\t\t\t\t\t? selected\n\t\t\t\t\t: selected[0];\n\n\t\t\t\tthis.$scope.$applyAsync();\n\t\t\t},\n\t\t}) as flatpickr.Instance;\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (this.flatpickr != null && typeof this.flatpickr.destroy === 'function') {\n\t\t\tthis.flatpickr.destroy();\n\t\t}\n\t}\n\n\tpublic getMinDate() {\n\t\treturn new Date(this.minDate as number).toLocaleDateString();\n\t}\n\n\tpublic getMaxDate() {\n\t\treturn new Date(this.maxDate as number).toLocaleDateString();\n\t}\n}\n\nexport const dateInput: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst input = h.createInput('text');\n\n\t\t// flatpickr requires control of the input element\n\t\tinput.removeAttribute('ng-model');\n\t\tinput.setAttribute('data-input', 'true');\n\n\t\tconst iconInput = h.createIconInput(input, 'calendar', [\n\t\t\t['data-toggle', 'true'],\n\t\t\t['style', 'cursor: pointer;'],\n\t\t]);\n\n\t\tconst inputGroupAppend = h.createHtmlElement('div', ['input-group-append']);\n\t\tinputGroupAppend.setAttribute('data-clear', 'true');\n\t\tinputGroupAppend.style.setProperty('cursor', 'pointer');\n\n\t\tconst inputGroupText = h.createHtmlElement('span', ['input-group-text']);\n\t\tconst clearIcon = h.createIcon('times');\n\n\t\tinputGroupText.appendChild(clearIcon);\n\t\tinputGroupAppend.appendChild(inputGroupText);\n\t\ticonInput.appendChild(inputGroupAppend);\n\n\t\treturn iconInput;\n\t},\n\tbindings: {\n\t\tminDate: '<',\n\t\tmaxDate: '<',\n\t},\n\tvalidators: {\n\t\tminDate: 'Date must be on or after {{$ctrl.getMinDate()}}',\n\t\tmaxDate: 'Date must be on or before {{$ctrl.getMaxDate()}}',\n\t},\n\tcontroller: DateInputController,\n};\n","import { NgController, makeInjectableCtrl } from './controller';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgHttp } from './http';\nimport { NgAppConfig } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgInjector, NgScope } from './ng';\n\nconst MODAL_SHOW_DELAY = 23;\nconst MODAL_HIDE_DELAY = 150;\n\nexport class NgModal extends NgService {\n\tprotected readonly backdrop: HTMLDivElement;\n\tprotected readonly container: HTMLDivElement;\n\tprotected readonly content: HTMLDivElement;\n\tprotected readonly dialog: HTMLDivElement;\n\tprotected readonly header: HTMLDivElement;\n\tprotected readonly headerCloseButton: HTMLButtonElement;\n\tprotected readonly title: HTMLHeadingElement;\n\tprotected readonly body: HTMLDivElement;\n\tprotected readonly footer: HTMLDivElement;\n\tprotected readonly footerCancelButton: HTMLButtonElement;\n\tprotected readonly footerOkButton: HTMLButtonElement;\n\n\tprotected readonly $compile: (element: Element) => (scope: NgScope) => { [i: number]: HTMLElement };\n\tprotected readonly $rootScope: NgScope;\n\n\tconstructor(\n\t\tprotected readonly $renderer: NgRenderer,\n\t\tprotected readonly $log: NgLogger,\n\t\tprotected readonly $http: NgHttp,\n\t\tprotected readonly $config: NgAppConfig,\n\t\tprotected readonly $injector: NgInjector,\n\t) {\n\t\tsuper();\n\n\t\tthis.$compile = this.$injector.get('$compile');\n\t\tthis.$rootScope = this.$injector.get('$rootScope');\n\n\t\tthis.backdrop = this.$renderer.createHtmlElement('div', ['modal-backdrop', 'fade']);\n\t\tthis.title = this.$renderer.createHtmlElement('h5', ['modal-title'], [['id', `modal-title-${this.uniqueId}`]]);\n\n\t\tthis.headerCloseButton = this.$renderer.createHtmlElement('button', ['close'], [['type', 'button'], ['aria-label', 'close']]);\n\t\tthis.headerCloseButton.innerHTML = '&times;';\n\n\t\tthis.header = this.$renderer.createHtmlElement('div', ['modal-header']);\n\t\tthis.body = this.$renderer.createHtmlElement('div', ['modal-body']);\n\t\tthis.footer = this.$renderer.createHtmlElement('div', ['modal-footer']);\n\t\tthis.content = this.$renderer.createHtmlElement('div', ['modal-content']);\n\n\t\tthis.header.appendChild(this.title);\n\t\tthis.header.appendChild(this.headerCloseButton);\n\n\t\tthis.content.appendChild(this.header);\n\t\tthis.content.appendChild(this.body);\n\t\tthis.content.appendChild(this.footer);\n\n\t\tthis.footerCancelButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-info'], [['type', 'button']]);\n\t\tthis.footerOkButton = this.$renderer.createHtmlElement('button', ['btn', 'btn-success'], [['type', 'button']]);\n\n\t\tthis.footer.appendChild(this.footerCancelButton);\n\t\tthis.footer.appendChild(this.footerOkButton);\n\n\t\tthis.dialog = this.$renderer.createHtmlElement('div', ['modal-dialog'], [['role', 'document']]);\n\t\tthis.dialog.appendChild(this.content);\n\n\t\tthis.container = this.$renderer.createHtmlElement('div', ['fade', 'modal'], [\n\t\t\t['aria-hidden', 'true'],\n\t\t\t['aria-labelledby', 'modal-title'],\n\t\t\t['role', 'dialog'],\n\t\t\t['tabindex', '-1'],\n\t\t]);\n\t\tthis.container.appendChild(this.dialog);\n\n\t\tdocument.body.appendChild(this.container);\n\t}\n\n\tpublic open<T extends typeof NgController>(options: NgModalOptions<T> = { }) {\n\t\tconst { $log } = this;\n\t\tconst {\n\t\t\ttitle = 'Set the <code>title</code> property to replace me :)',\n\t\t\ttemplate = '<p class=\"lead\">Set the <code>template</code> property to replace me :)</p>',\n\t\t\tcontroller = NgController,\n\t\t\tonClose = () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t} = options;\n\n\t\tconst defaultCancelBtnText = 'Cancel';\n\t\tconst defaultOkBtnText = 'Ok';\n\t\tlet {\n\t\t\tcancelBtnText = defaultCancelBtnText,\n\t\t\tokBtnText = defaultOkBtnText,\n\t\t} = options;\n\n\t\tif (cancelBtnText !== false) {\n\t\t\tif (cancelBtnText === true) {\n\t\t\t\tcancelBtnText = defaultCancelBtnText;\n\t\t\t}\n\t\t\tthis.footerCancelButton.innerText = cancelBtnText;\n\t\t}\n\t\tif (okBtnText !== false) {\n\t\t\tif (okBtnText === true) {\n\t\t\t\tokBtnText = defaultOkBtnText;\n\t\t\t}\n\t\t\tthis.footerOkButton.innerText = okBtnText;\n\t\t}\n\n\t\tthis.title.innerHTML = typeof title === 'function' ? title() : title;\n\t\tthis.body.innerHTML =\n\t\t\ttypeof template === 'function' ? template() : template;\n\n\t\tconst $scope = this.$rootScope.$new(true) as Parameters<NgModal['hideModal']>[1];\n\t\tconst $element = this.$compile(this.container)($scope);\n\t\tconst $ctrl = makeInjectableCtrl(controller, {\n\t\t\tlog: this.$log,\n\t\t\thttp: this.$http,\n\t\t\trenderer: this.$renderer,\n\t\t\tconfig: () => this.$config,\n\t\t});\n\n\t\t$scope.$ctrl = new $ctrl($element, $scope, this.$injector) as NgController;\n\t\t$scope.$applyAsync();\n\n\t\tconst escapeKeyListener = (e: KeyboardEvent) => {\n\t\t\tif (e.key === 'Escape' || e.key === 'Esc') {\n\t\t\t\tclose();\n\t\t\t}\n\t\t};\n\t\tconst dismiss = () => {\n\t\t\tremoveEventListeners();\n\t\t\tthis.hideModal(escapeKeyListener, $scope);\n\t\t};\n\n\t\tthis.showModal(escapeKeyListener);\n\n\t\tconst removeEventListeners = () => {\n\t\t\tthis.headerCloseButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerCancelButton.removeEventListener('click', dismiss);\n\t\t\tthis.footerOkButton.removeEventListener('click', close);\n\t\t\tthis.backdrop.removeEventListener('click', close);\n\t\t};\n\n\t\tconst close = () => {\n\t\t\tif (onClose.call({ $log }, controller as T)) {\n\t\t\t\tdismiss();\n\t\t\t}\n\t\t};\n\t\tthis.headerCloseButton.addEventListener('click', dismiss);\n\t\tthis.footerCancelButton.addEventListener('click', dismiss);\n\t\tthis.footerOkButton.addEventListener('click', close);\n\t\tthis.backdrop.addEventListener('click', close);\n\n\t\treturn { close, dismiss };\n\t}\n\n\tprotected showModal(escapeKeyListener: (e: KeyboardEvent) => void) {\n\t\tthis.backdrop.style.setProperty('display', 'block');\n\n\t\tthis.container.style.setProperty('display', 'block');\n\t\tthis.container.classList.remove('show');\n\t\tthis.container.removeAttribute('aria-hidden');\n\t\tthis.container.setAttribute('aria-modal', 'true');\n\t\tthis.container.style.setProperty('padding-right', '17px');\n\t\tthis.container.style.setProperty('pointer-events', 'none');\n\n\t\twindow.addEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.appendChild(this.backdrop);\n\t\tdocument.body.classList.add('modal-open');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.backdrop.classList.add('show');\n\t\t\tthis.container.classList.add('show');\n\t\t}, MODAL_SHOW_DELAY);\n\t}\n\n\tprotected hideModal(\n\t\tescapeKeyListener: (e: KeyboardEvent) => void,\n\t\tscope: NgScope & { $ctrl: NgController; },\n\t) {\n\t\tthis.backdrop.classList.remove('show');\n\t\tthis.container.classList.remove('show');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.container.style.setProperty('display', 'none');\n\t\t\tthis.backdrop.style.setProperty('display', 'none');\n\t\t}, MODAL_HIDE_DELAY);\n\n\t\tscope.$destroy();\n\t\twindow.removeEventListener('keydown', escapeKeyListener);\n\t\tdocument.body.classList.remove('modal-open');\n\t}\n}\n\nexport interface NgModalOptions<T extends typeof NgController> {\n\t/**\n\t * String representing the modal's title\n\t */\n\ttitle?: string | (() => string);\n\n\t/**\n\t * Inline template representing the modal's content\n\t */\n\ttemplate?: string | (() => string);\n\n\t/**\n\t * Ok button text (false to hide)\n\t */\n\tokBtnText?: string | boolean;\n\n\t/**\n\t * Cancel button text (false to hide, true for default)\n\t */\n\tcancelBtnText?: string | boolean;\n\n\t/**\n\t * A controller for a modal instance.\n\t */\n\tcontroller?: T;\n\n\tonClose?(this: { $log: NgLogger }, controller: T): boolean;\n}\n","import { PatchPayload } from '@ledge/types/patch';\nimport { NgService } from './service';\nimport { NgAppConfig } from './options';\n\nexport const DEFAULT_REQUEST_TIMEOUT = 10000;\n\nexport interface NgHttpInterceptor {\n\trequest?(config: Request): Request | Promise<Request>;\n\tresponse?(response: any): any;\n\tresponseError?<T extends Error>(response: Response, err: T): void;\n}\n\n// tslint:disable:no-redundant-jsdoc\nexport interface NgHttpOptions extends RequestInit {\n\t/**\n\t *\n\t * @default `location.host`\n\t */\n\thost?: string;\n\n\t/**\n\t * If true, use `https://`. Otherwise, use `http://`\n\t * @default false\n\t */\n\tssl?: boolean;\n\n\t/**\n\t * How many milliseconds to wait before aborting the request\n\t * @default 10000\n\t */\n\ttimeout?: number;\n\n\tinterceptors?: NgHttpInterceptor[];\n\n\t/**\n\t * Unsupported\n\t */\n\treferrer?: never;\n\n\t/**\n\t * Unsupported\n\t */\n\tsignal?: never;\n\n\tonFinally?(): void;\n\tgetConfig(): NgAppConfig;\n}\n// tslint:enable:no-redundant-jsdoc\n\nexport class NgHttp extends NgService {\n\tprivate interceptors: {\n\t\trequest: ((config: Request) => Request | Promise<Request>)[];\n\t\tresponse: ((response: any) => any)[];\n\t\tresponseError: (<T extends Error>(\n\t\t\tresponse: Response,\n\t\t\terr: T,\n\t\t) => void)[];\n\t};\n\n\tconstructor(private options: NgHttpOptions) {\n\t\tsuper();\n\t\tconst { interceptors = [] } = options;\n\t\tthis.interceptors = {\n\t\t\trequest: interceptors\n\t\t\t\t.map(x => x.request)\n\t\t\t\t.filter(x => typeof x === 'function') as ((\n\t\t\t\tconfig: Request,\n\t\t\t) => Request | Promise<Request>)[],\n\t\t\tresponse: interceptors\n\t\t\t\t.map(x => x.response)\n\t\t\t\t.filter(x => typeof x === 'function') as ((response: any) => any)[],\n\t\t\tresponseError: interceptors\n\t\t\t\t.map(x => x.responseError)\n\t\t\t\t.filter(x => typeof x === 'function') as (<T extends Error>(\n\t\t\t\tresponse: Response,\n\t\t\t\terr: T,\n\t\t\t) => void)[],\n\t\t};\n\t}\n\n\tpublic async Get<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'GET');\n\t}\n\n\tpublic async Post<T = any>(url: string, data: any = null) {\n\t\treturn this.fetch<T>(url, 'POST', data);\n\t}\n\n\tpublic async Patch<T = any>(url: string, data: PatchPayload) {\n\t\treturn this.fetch<T>(url, 'PATCH', data);\n\t}\n\n\tpublic async Put<T = any>(url: string, data: T) {\n\t\treturn this.fetch(url, 'PUT', data);\n\t}\n\n\tpublic async Delete<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'DELETE');\n\t}\n\n\tpublic async Jsonp<T = any>(url: string) {\n\t\treturn this.fetch<T>(url, 'JSONP');\n\t}\n\n\tpublic getFullUrl(uri: string, host: string, ssl: boolean) {\n\t\treturn new URL(uri, `http${ssl ? 's' : ''}://${host}/`).toJSON();\n\t}\n\n\tprivate async fetch<T>(\n\t\turi: string,\n\t\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE' | 'JSONP',\n\t\tdata?: any,\n\t) {\n\t\tlet response = new Response();\n\t\ttry {\n\t\t\tconst {\n\t\t\t\thost = this.options.getConfig().API_HOST,\n\t\t\t\tssl = location.protocol === 'https:',\n\t\t\t\tcache = 'no-store',\n\t\t\t\tcredentials = 'include',\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive = false,\n\t\t\t\tmode = 'cors',\n\t\t\t\tredirect = 'manual',\n\t\t\t\treferrerPolicy = 'origin-when-cross-origin',\n\t\t\t\ttimeout = DEFAULT_REQUEST_TIMEOUT,\n\t\t\t\twindow,\n\t\t\t} = this.options;\n\n\t\t\tconst url = this.getFullUrl(uri, host, ssl);\n\t\t\tconst abortCtrl = new AbortController();\n\n\t\t\tlet request = new Request(url, {\n\t\t\t\tmethod,\n\t\t\t\tcache,\n\t\t\t\tcredentials,\n\t\t\t\theaders,\n\t\t\t\tintegrity,\n\t\t\t\tkeepalive,\n\t\t\t\tmode,\n\t\t\t\tredirect,\n\t\t\t\treferrerPolicy,\n\t\t\t\tsignal: abortCtrl.signal,\n\t\t\t\twindow,\n\t\t\t\tbody: JSON.stringify(data),\n\t\t\t});\n\n\t\t\tfor (const onRequest of this.interceptors.request) {\n\t\t\t\trequest = await onRequest(request);\n\t\t\t}\n\n\t\t\tconst abortTimer = setTimeout(abortCtrl.abort, timeout);\n\t\t\tresponse = await fetch(request);\n\t\t\tclearTimeout(abortTimer);\n\n\t\t\tif (response.ok) {\n\t\t\t\tlet value: T = await response.json();\n\t\t\t\tfor (const onResponse of this.interceptors.response) {\n\t\t\t\t\tvalue = await onResponse(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error();\n\t\t} catch (err) {\n\t\t\tfor (const onResponseError of this.interceptors.responseError) {\n\t\t\t\tawait onResponseError(response.clone(), err);\n\t\t\t}\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tif (typeof this.options.onFinally === 'function') {\n\t\t\t\tthis.options.onFinally();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { NgController } from '../controller';\nimport { NgComponentOptions } from '../options';\n\nclass SpinnerController extends NgController {\n\tprivate readonly colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n\tpublic $onInit() {\n\t\tconst { color = 'primary' } = this.$attrs;\n\n\t\tif (this.colors.includes(color) === false) {\n\t\t\tthrow new Error(`Color not supported: ${color}.\\nSupported colors: ${this.colors.join(', ')}`);\n\t\t}\n\n\t\tconst srDesc = this.$renderer.createHtmlElement('span', ['sr-only']);\n\t\tsrDesc.innerText = 'Loading...';\n\n\t\tconst spinner = this.$renderer.createHtmlElement('div', ['spinner-border', `text-${color}`, 'mx-1'], [['role', 'status']]);\n\t\tspinner.appendChild(srDesc);\n\t\tspinner.style.setProperty('margin-top', '0.23rem');\n\n\t\tthis.$element.appendChild(spinner);\n\t}\n}\n\nexport const appSpinner: NgComponentOptions = {\n\tcontroller: SpinnerController,\n};\n","import { appSpinner } from './app-spinner';\n\nexport const misc = {\n\tappSpinner,\n};\n","import { Indexed } from '@ledge/types';\n\nexport class NgAttributes {\n\t[name: string]: any;\n\tpublic readonly $attr: Indexed<string> = { };\n\n\tpublic PREFIX_REGEXP = /^((?:x|data)[:\\-_])/i;\n\tpublic SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\n\tconstructor(private readonly $$element: Element, attrs: Indexed = { }) {\n\t\tfor (const { name: key, value } of Array.from($$element.attributes)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(attrs)) {\n\t\t\tthis.$record(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with x- or data-) to its normalized, camelCase form.\n\t *\n\t * Also there is special case for Moz prefix starting with upper case letter.\n\t *\n\t * For further information check out the guide on @see https://docs.angularjs.org/guide/directive#matching-directives\n\t */\n\tpublic $normalize(name: string) {\n\t\treturn name\n\t\t\t.replace(this.PREFIX_REGEXP, '')\n\t\t\t.replace(this.SPECIAL_CHARS_REGEXP, (_, letter, offset) => offset ? letter.toUpperCase() : letter);\n\t}\n\n\t/**\n\t * Checks if the CSS class value is present on the element.\n\t */\n\tpublic $hasClass(className: string) {\n\t\treturn this.$$element.classList.contains(className);\n\t}\n\n\t/**\n\t * Adds the specified CSS class value to the element.\n\t * If animations are enabled then an animation will be triggered for the class addition.\n\t */\n\tpublic $addClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.add(className);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified CSS class value from the element.\n\t * If animations are enabled then an animation will be triggered for the class removal.\n\t */\n\tpublic $removeClass(className: string) {\n\t\tif (this.$hasClass(className)) {\n\t\t\tthis.$$element.classList.remove(className);\n\t\t}\n\t}\n\n\t/**\n\t * Adds and removes CSS class values to the element based on the difference between\n\t * two space-delimited strings of CSS class values.\n\t *\n\t * @param newClasses: The space-delimited list of CSS classes to add or retain\n\t * @param oldClasses: The space-delimited list of CSS classes to remove if not contained within newClasses\n\t */\n\tpublic $updateClass(newClasses: string, oldClasses: string) {\n\t\tconst nu = newClasses.split(/\\s/g).filter(x => x.length > 0);\n\t\tconst old = oldClasses.split(/\\s/g).filter(x => x.length > 0);\n\n\t\tfor (const o of old) {\n\t\t\tif (nu.includes(o)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.$removeClass(o);\n\t\t}\n\n\t\tfor (const n of nu) {\n\t\t\tthis.$addClass(n);\n\t\t}\n\t}\n\n\t/**\n\t * Set DOM element attribute value.\n\t */\n\tpublic $set(key: string, value: any) {\n\t\tthis.$$element.setAttribute(key, value);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tpublic $observe<T>(_: string, __: (value?: T) => any) {\n\t\t// tslint:disable-next-line:no-console\n\t\tconsole.warn('$observe is a noop');\n\t\treturn () => { return; };\n\t}\n\n\tprotected $record(key: string, value: string) {\n\t\tconst normalized = this.$normalize(key);\n\t\tthis[normalized] = value;\n\t\tthis.$attr[key] = normalized;\n\t}\n}\n","import { NgInputOptions } from './shared';\n\nexport const checkBox: NgInputOptions = {\n\ttype: 'input',\n\ttemplateClass: 'form-check',\n\tlabelClass: 'form-check-label',\n\trender(h) {\n\t\tconst input = h.createInput('checkbox');\n\t\tinput.style.setProperty('cursor', 'pointer');\n\n\t\tif (this.$attrs.hasOwnProperty('inline')) {\n\t\t\tthis.$template.classList.remove('form-check');\n\t\t\tthis.$template.classList.add('form-check-inline');\n\t\t}\n\n\t\treturn input;\n\t},\n\tbindings: {\n\t\tngChecked: '<',\n\t},\n};\n","import { Indexed } from '@ledge/types';\nimport { ParamType, ResolveTypes, StateDeclaration, StateService, TargetState, Transition } from '@uirouter/core';\n\nimport { NgService } from './service';\n\nexport class NgRouter<T extends NgRoute = NgRoute> extends NgService {\n\tpublic routes: T[] = [];\n\n\tpublic getRoutes() {\n\t\treturn this.routes;\n\t}\n\n\tpublic registerRoute(partial: Partial<T>) {\n\t\tconst state = {\n\t\t\t...this.generateRouteMeta(partial),\n\t\t\t...partial,\n\t\t};\n\n\t\tif (this.isNgTransitionFn(state.onEnter)) {\n\t\t\tstate.onEnter = ['$transition$', state.onEnter];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onExit)) {\n\t\t\tstate.onExit = ['$transition$', state.onExit];\n\t\t}\n\t\tif (this.isNgTransitionFn(state.onRetain)) {\n\t\t\tstate.onRetain = ['$transition$', state.onRetain];\n\t\t}\n\n\t\tthis.routes.push(state as T);\n\n\t\treturn state as T;\n\t}\n\n\tpublic async isAuthorized() {\n\t\treturn true;\n\t}\n\n\tpublic generateIntIdParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'path';\n\t\treturn param;\n\t}\n\n\tpublic generateIntQueryParam() {\n\t\tconst param = {\n\t\t\ttype: new ParamType({\n\t\t\t\tdecode(value) {\n\t\t\t\t\treturn parseInt(value, 10);\n\t\t\t\t},\n\t\t\t\tencode(value) {\n\t\t\t\t\treturn value && value.toString();\n\t\t\t\t},\n\t\t\t\tequals(a, b) {\n\t\t\t\t\treturn this.is(a) && a === b;\n\t\t\t\t},\n\t\t\t\tis(value) {\n\t\t\t\t\treturn Number.isInteger(this.decode(value));\n\t\t\t\t},\n\t\t\t}),\n\t\t};\n\n\t\tparam.type.name = 'query';\n\t\treturn param;\n\t}\n\n\tprotected isNgTransitionFn(item?: NgResolveFn | NgAnnotatedResolveFn): item is NgResolveFn {\n\t\treturn typeof item === 'function';\n\t}\n\n\tprotected annotateResolveFunctions({ resolve = { } }: NgRoute) {\n\t\tfor (const [id, resolveFn] of Object.entries(resolve)) {\n\t\t\tif (Array.isArray(resolve)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this.isNgTransitionFn(resolveFn)) {\n\t\t\t\tresolve[id] = ['$transition$', resolveFn];\n\t\t\t}\n\t\t}\n\n\t\treturn resolve;\n\t}\n\n\tprotected generateRouteMeta(\n\t\t{\n\t\t\tparams = { },\n\t\t\tdata = { },\n\t\t\tname = '',\n\t\t\tcomponent = '',\n\t\t\tparent = '',\n\t\t}: Partial<T>,\n\t) {\n\t\tname = (name || component);\n\n\t\tlet url = `/${data.isBase ? name : name.split(/(?=[A-Z])/).join('/').toLowerCase()}`\n\t\t\t.replace(/View$/, '');\n\n\t\tfor (const [key, { type = { } }] of Object.entries<any>(params)) {\n\t\t\turl += type.name === 'path' ? '/:' : (url.includes('?') ? '&' : '?');\n\t\t\turl += key;\n\t\t}\n\n\t\treturn { name, parent, url };\n\t}\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgStateService extends StateService {\n\tcurrent: any;\n}\n\nexport interface NgStateService extends _NgStateService {\n\tcurrent: NgRoute;\n\tlabel: string;\n\tparent: string;\n}\n\n/**\n * @internalapi\n * an intermediate interface.\n *\n * Used to reset typings to `any` so the NgRoute interface can then narrow them\n */\n// tslint:disable-next-line:class-name\ninterface _NgRoute extends StateDeclaration {\n\tonExit?: any;\n\tonRetain?: any;\n\tonEnter?: any;\n\tviews?: any;\n\tresolve?: any;\n}\n\nexport type NgResolveFn<T = any> = ($trans: Transition) => Promise<T>;\nexport type NgAnnotatedResolveFn<T = any> = [string, NgResolveFn<T>];\nexport type NgTransition = NgResolveFn<TargetState | Transition> | NgAnnotatedResolveFn<TargetState | Transition>;\n\nexport interface NgRoute extends _NgRoute {\n\t/**\n\t * The name of the component to use for this view.\n\t */\n\tcomponent?: string;\n\n\t/**\n\t * An object which maps `resolve`s to component `bindings`.\n\t *\n\t * When using a component declaration (`component: 'myComponent'`),\n\t * each input binding for the component is supplied data from a resolve of\n\t * the same name, by default.\n\t *\n\t * You may supply data from a different resolve name by mapping it here.\n\t */\n\tbindings?: {\n\t\t[key: string]: string;\n\t};\n\n\tresolve?: Indexed<NgResolveFn | NgAnnotatedResolveFn> | ResolveTypes[];\n\n\t/**\n\t * Injected function which returns the HTML template.\n\t * The template will be used to render the corresponding component.\n\t *\n\t * #### Examples:\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: require('./template.pug');\n\t * }\n\t * ```\n\t * ```ts\n\t * {\n\t * \t// other props\n\t * \ttemplate: '<div>Hello, world!</div>';\n\t * }\n\t * ```\n\t */\n\ttemplate?: string | ((...args: any[]) => void);\n\n\turl: string;\n\tparent: string;\n\tlabel: string;\n\n\tonEnter?: NgTransition;\n\tonExit?: NgTransition;\n\tonRetain?: NgTransition;\n}\n","import { Indexed } from '@ledge/types';\nimport { copy } from 'angular';\n\nimport { NgInputController } from './controller';\nimport { NgInputOptions } from './options';\nimport { NgAttributes } from '../../attributes';\nimport { NgComponentOptions } from '../../options';\nimport { NgRenderer } from '../../renderer';\nimport { NgService } from '../../service';\n\nconst BaseComponent = Object.seal({\n\tisRadioOrCheckbox: false,\n\ttype: 'input',\n\tlabelClass: 'form-control-label',\n\ttemplateClass: 'form-group',\n\tattrs: { },\n\tcontroller: class extends NgInputController { },\n\trender(_h) {\n\t\treturn this.$template;\n\t},\n\trenderLabel(h) {\n\t\tconst $transclude = h.createSlot();\n\t\t$transclude.textContent = InputService.getDefaultLabelText(this.$attrs);\n\t\tthis.$label.appendChild($transclude);\n\t},\n\tpostRender(_h) {\n\t\treturn this.$template;\n\t},\n}) as NgInputOptions & { isRadioOrCheckbox: boolean };\n\nconst ValidationExpressions = Object.seal({\n\t$Error: '$ctrl.ngModelCtrl.$error',\n\t$Invalid: '$ctrl.ngModelCtrl.$invalid',\n\t$Touched: '$ctrl.ngModelCtrl.$touched',\n\t$FormInvalid: `$ctrl.ngModelCtrl.$$parentForm.$submitted`,\n\tget $IsInvalid() {\n\t\treturn `(${this.$Touched} || ${this.$FormInvalid}) && ${this.$Invalid}`;\n\t},\n});\n\nexport class InputService extends NgService {\n\tpublic static readonly $validationAttrs = [\n\t\t'required', 'ngRequired',\n\t\t'disabled', 'ngDisabled',\n\t\t'readonly', 'ngReadonly',\n\t];\n\n\tpublic static readonly $validationMessages = new Map<string, string>([\n\t\t['email', 'Email address must be in the following form: email@address.com'],\n\t\t['required', 'This field is required'],\n\t\t['minlength', 'Input is not long enough'],\n\t\t['maxlength', 'Input is too long'],\n\t]);\n\n\tpublic static readonly $baseDefinition: NgComponentOptions = {\n\t\ttransclude: {\n\t\t\tcontain: '?contain',\n\t\t},\n\t\trequire: {\n\t\t\tngModelCtrl: 'ngModel',\n\t\t},\n\t\tbindings: {\n\t\t\tngModel: '=',\n\t\t\tngModelOptions: '<',\n\t\t\tngDisabled: '<',\n\t\t\tngReadonly: '<',\n\t\t\tngRequired: '<',\n\t\t},\n\t};\n\n\tpublic static readonly $BaseComponent = BaseComponent;\n\tpublic static readonly $ValidationExpressions = ValidationExpressions;\n\n\t/**\n\t * Retrieves the identifying name for an ngModel\n\t */\n\tpublic static modelIdentifier($attrs: NgAttributes) {\n\t\treturn ($attrs.ngModel as string).split('.').pop() as string;\n\t}\n\n\t/**\n\t * Gets text -- intended for a label -- from the ngModel property text\n\t */\n\tpublic static getDefaultLabelText($attrs: NgAttributes) {\n\t\treturn InputService.modelIdentifier($attrs)\n\t\t\t.split(/(?=[A-Z0-9])/)\n\t\t\t.map(x => isNaN(Number(x)) ? x.charAt(0).toUpperCase() + x.substring(1) : x)\n\t\t\t.join(' ');\n\t}\n\n\t/**\n\t * @param $input - The input to set attributes on\n\t */\n\tpublic static getInputInput($input: HTMLElement) {\n\t\treturn (\n\t\t\t['INPUT', 'TEXTAREA', 'SELECT'].includes($input.tagName)\n\t\t\t\t? $input\n\t\t\t\t:\t$input.querySelector('select') || $input.querySelector('input')\n\t\t) as HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\t}\n\n\t/**\n\t * Transform an input component definition into an ng component definition\n\t * @param component An object representing the requested component definition\n\t */\n\tpublic static defineInputComponent(component: NgInputOptions) {\n\t\t// 'h' identifier (and many other ideas) taken from the virtual-dom ecosystem\n\t\tconst h = new NgRenderer();\n\n\t\tconst $component = copy({ ...InputService.$BaseComponent, ...component });\n\t\t$component.isRadioOrCheckbox = $component.labelClass === 'form-check-label';\n\n\t\tconst $definition = copy(InputService.$baseDefinition);\n\n\t\t// assign child objects\n\t\tObject.assign($definition.bindings, $component.bindings);\n\t\tObject.assign($definition.transclude, $component.transclude);\n\n\t\t// assign controller\n\t\tif ($component.controller === undefined) {\n\t\t\tthrow new Error(`Invalid component: ${JSON.stringify($component)}`);\n\t\t}\n\t\t$definition.controller = $component.controller;\n\n\t\t// assign template\n\t\t$definition.template = ['$element', '$attrs', ($element: [HTMLElement], $attrs: NgAttributes) => {\n\t\t\tconst $el = $element[0];\n\n\t\t\tconst $template = h.createHtmlElement('div', [$component.templateClass as string]);\n\n\t\t\t// allow consumer to access $template and $attrs attributes from `this`\n\t\t\tconst $input = $component.render.call({ $template, $attrs }, h);\n\n\t\t\tconst isRadio = ($input as HTMLInputElement).type === 'radio';\n\t\t\tconst isRequired = $attrs.hasOwnProperty('required');\n\t\t\tconst isSrOnly = $attrs.hasOwnProperty('srOnly');\n\n\t\t\t// all inputs must have labels\n\t\t\tconst $label = h.createLabel([$component.labelClass as string], { isRequired, isSrOnly, isRadio });\n\n\t\t\tif ($component.isRadioOrCheckbox === false) {\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\tif ($component.canHaveIcon === true) {\n\t\t\t\t$template.appendChild(h.createIconInput($input, $attrs.icon));\n\t\t\t} else {\n\t\t\t\t$template.appendChild($input);\n\t\t\t}\n\n\t\t\tif ($el.closest('contain') != null) {\n\t\t\t\t$input.style.marginTop = '8px';\n\t\t\t\t$label.classList.add('sr-only');\n\t\t\t}\n\n\t\t\tconst requiredTag = $label.firstElementChild;\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.removeChild(requiredTag);\n\t\t\t}\n\n\t\t\t($component.renderLabel as NonNullable<NgInputOptions['renderLabel']>)\n\t\t\t\t.call({ $label, $attrs }, h);\n\n\t\t\tif (requiredTag != null) {\n\t\t\t\t$label.appendChild(requiredTag);\n\t\t\t}\n\n\t\t\t// add a transclusion slot for e.g. nesting inputs\n\t\t\t$template.appendChild(h.createSlot('contain'));\n\n\t\t\tif ($component.isRadioOrCheckbox === true) {\n\t\t\t\t$label.style.setProperty('cursor', 'pointer');\n\t\t\t\t$template.appendChild($label);\n\t\t\t}\n\n\t\t\t($component.postRender as NonNullable<NgInputOptions['postRender']>)\n\t\t\t\t.call({ $template, $attrs }, h);\n\n\t\t\t// that's right, i named it after filterFilter. fight me.\n\t\t\tconst $inputInput = InputService.getInputInput($input);\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.filter(x => $attrs.hasOwnProperty(x) === true)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\t$inputInput.setAttribute(\n\t\t\t\t\t\tx.replace(/[A-Z]/, s => `-${s.toLowerCase()}`),\n\t\t\t\t\t\tx.startsWith('ng') ? `$ctrl.${x}` : 'true',\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\tif ($inputInput.tagName !== 'SELECT') {\n\t\t\t\t$inputInput.setAttribute('ng-class', `{ 'is-invalid': ${InputService.$ValidationExpressions.$IsInvalid} }`);\n\t\t\t\t$inputInput.setAttribute('ng-blur', '$ctrl.ngModelCtrl.$setTouched()');\n\t\t\t}\n\n\t\t\tconst $validationBlock = h.createHtmlElement('div', [], [\n\t\t\t\t['ng-messages', InputService.$ValidationExpressions.$Error],\n\t\t\t\t['ng-show', InputService.$ValidationExpressions.$IsInvalid],\n\t\t\t\t['role', 'alert'],\n\t\t\t]);\n\n\t\t\tconst { validators = { } } = $component;\n\t\t\tconst attrs = Object.keys($component.attrs as Indexed);\n\n\t\t\tfor (const [key, value] of Object.entries(validators)) {\n\t\t\t\tInputService.$validationMessages.set(key, value);\n\t\t\t\tattrs.push(key);\n\t\t\t}\n\n\t\t\tInputService.$validationAttrs\n\t\t\t\t.concat(...attrs, 'email')\n\t\t\t\t.filter(x => x.startsWith('ng') === false)\n\t\t\t\t.filter(x => InputService.$validationMessages.has(x) === true)\n\t\t\t\t.filter(x => x !== 'email' || $inputInput.type === x)\n\t\t\t\t.forEach(x => {\n\t\t\t\t\tconst $message = h.createHtmlElement('div', ['text-danger'], [['ng-message', x]]);\n\t\t\t\t\t$message.innerText = InputService.$validationMessages.get(x) as string;\n\t\t\t\t\t$validationBlock.appendChild($message);\n\t\t\t\t});\n\n\t\t\tlet $html: string;\n\t\t\tif (isRadio === true) {\n\t\t\t\tconst $newTpl = h.createHtmlElement('div', ['form-group']);\n\t\t\t\t$newTpl.appendChild($template);\n\t\t\t\t$newTpl.appendChild($validationBlock);\n\t\t\t\t$html = $newTpl.outerHTML;\n\t\t\t} else {\n\t\t\t\t$template.appendChild($validationBlock);\n\t\t\t\t$html = $template.outerHTML;\n\t\t\t}\n\n\t\t\t$html = $html.replace(/{{id}}/g, InputService.modelIdentifier($attrs));\n\n\t\t\tattrs\n\t\t\t\t.forEach(prop => {\n\t\t\t\t\t$html = $html.replace(\n\t\t\t\t\t\tnew RegExp(`{{${prop}}}`, 'g'),\n\t\t\t\t\t\t$attrs[prop] || ($component.attrs as Indexed)[prop],\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\treturn $html;\n\t\t}];\n\n\t\treturn $definition;\n\t}\n}\n","import { WritableKeysOf } from '@ledge/types';\n\nexport class NgRenderer {\n\tpublic baseInputAttrs: [string, string][] = [\n\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t['ng-model', '$ctrl.ngModel'],\n\t\t['ng-model-options', '$ctrl.ngModelOptions'],\n\t];\n\n\tpublic createHtmlElement<T extends keyof HTMLElementTagNameMap | 'ng-transclude'>(\n\t\ttagName: T,\n\t\tclasses: string[] = [],\n\t\tattrs: [string, string][] = [],\n\t) {\n\t\tconst $el = document.createElement(tagName);\n\n\t\tif (classes.length > 0) {\n\t\t\t$el.classList.add(...classes);\n\t\t}\n\n\t\tfor (const [key, value] of attrs) {\n\t\t\t$el.setAttribute(key, value);\n\t\t}\n\n\t\treturn $el as T extends keyof HTMLElementTagNameMap\n\t\t\t? HTMLElementTagNameMap[T]\n\t\t\t: HTMLUnknownElement;\n\t}\n\n\tpublic createInput(type = 'text', attrs: [string, string][] = []) {\n\t\tconst $isRange = type === 'range';\n\t\tconst $isRadio = type === 'radio';\n\t\tconst $isCheckbox = type === 'checkbox';\n\t\tconst $isFormCheck = $isRadio || $isCheckbox;\n\n\t\tconst $class =\n\t\t\t$isFormCheck\n\t\t\t\t? ['form-check-input']\n\t\t\t\t: $isRange\n\t\t\t\t\t? ['custom-range']\n\t\t\t\t\t: ['form-control'];\n\n\t\tconst $inputAttrs: [string, string][] = [\n\t\t\t...this.baseInputAttrs,\n\t\t\t...attrs,\n\t\t\t['type', type],\n\t\t];\n\n\t\tif ($isRadio) {\n\t\t\t$inputAttrs.shift(); // we'll set the id in render\n\t\t} else if ($isCheckbox === false && $isRange === false) {\n\t\t\t$inputAttrs.push(['maxlength', '{{maxlength}}'], ['placeholder', '{{placeholder}}']);\n\t\t}\n\n\t\treturn this.createHtmlElement('input', $class, $inputAttrs);\n\t}\n\n\tpublic createTextArea() {\n\t\treturn this.createHtmlElement('textarea', ['form-control'], [\n\t\t\t...this.baseInputAttrs,\n\t\t\t['maxlength', '{{maxlength}}'],\n\t\t\t['placeholder', '{{placeholder}}'],\n\t\t]);\n\t}\n\n\tpublic createIcon(icon: string, isFixedWidth = false) {\n\t\tconst $iconClasses = ['fa', `fa-${icon.replace(/^fw!/, '')}`];\n\t\tif (isFixedWidth) {\n\t\t\t$iconClasses.push('fa-fw');\n\t\t}\n\t\treturn this.createHtmlElement('span', $iconClasses, [['aria-hidden', 'true']]);\n\t}\n\n\tpublic createLabel(classList: string[], {\n\t\tisRequired = false,\n\t\tisSrOnly = false,\n\t\tisRadio = false,\n\t}: {\n\t\tisRequired?: boolean,\n\t\tisSrOnly?: boolean,\n\t\tisRadio?: boolean,\n\t} = {\n\t\t\tisRequired: false,\n\t\t\tisSrOnly: false,\n\t\t\tisRadio: false,\n\t\t},\n\t) {\n\t\tconst $label = this.createHtmlElement(\n\t\t\t'label',\n\t\t\tclassList,\n\t\t\t[['ng-attr-for', '{{id}}_{{$ctrl.uniqueId}}']],\n\t\t);\n\n\t\tif (isRequired === true && !isRadio) {\n\t\t\tconst $span = this.createHtmlElement('span', ['text-danger']);\n\t\t\t$span.textContent = ' *';\n\t\t\t$label.appendChild($span);\n\t\t}\n\n\t\tif (isSrOnly === true) {\n\t\t\t$label.classList.add('sr-only');\n\t\t}\n\n\t\treturn $label;\n\t}\n\n\tpublic createSlot(name?: string) {\n\t\treturn name != null\n\t\t\t? this.createHtmlElement('div', [], [['ng-transclude', name]])\n\t\t\t: this.createHtmlElement('ng-transclude') as HTMLDivElement;\n\t}\n\n\tpublic createIconInput($input: HTMLElement, icon?: string, inputGroupAttrs: [string, string][] = []) {\n\t\tif (icon == null) {\n\t\t\treturn $input;\n\t\t}\n\n\t\tconst $inputGroup = this.createHtmlElement('div', ['input-group']);\n\t\tconst $inputGroupPrepend = this.createHtmlElement('div', ['input-group-prepend'], inputGroupAttrs);\n\t\tconst $inputGroupText = this.createHtmlElement('span', ['input-group-text']);\n\t\tconst $icon = this.createIcon(icon, icon.startsWith('fw!'));\n\n\t\t$inputGroupText.appendChild($icon);\n\t\t$inputGroupPrepend.appendChild($inputGroupText);\n\n\t\t$inputGroup.appendChild($inputGroupPrepend);\n\t\t$inputGroup.appendChild($input);\n\n\t\treturn $inputGroup;\n\t}\n\n\t/**\n\t * Renderer2 implementations\n\t */\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic data: { [key: string]: any } = Object.create(null);\n\n\t// tslint:disable-next-line: member-ordering\n\tpublic destroyNode: null;\n\n\tpublic destroy() {\n\t\treturn;\n\t}\n\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T): HTMLElementTagNameMap[T];\n\tpublic createElement(tagName: string): HTMLUnknownElement;\n\tpublic createElement<T extends keyof HTMLElementTagNameMap>(tagName: T) {\n\t\treturn document.createElement(tagName);\n\t}\n\n\tpublic createText(value: string) {\n\t\treturn document.createTextNode(value);\n\t}\n\n\tpublic createComment(value: string) {\n\t\treturn document.createComment(value);\n\t}\n\n\tpublic appendChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.appendChild(newChild);\n\t}\n\n\tpublic removeChild(parent: HTMLElement, newChild: HTMLElement) {\n\t\tparent.removeChild(newChild);\n\t}\n\n\tpublic insertBefore(parent: HTMLElement, newChild: HTMLElement, refChild: HTMLElement) {\n\t\tparent.insertBefore(newChild, refChild);\n\t}\n\n\tpublic addClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.add(name);\n\t}\n\n\tpublic removeClass<T extends HTMLElement>(el: T, name: string) {\n\t\tel.classList.remove(name);\n\t}\n\n\tpublic setStyle<T extends HTMLElement>(el: T, style: string, value: any, important?: boolean) {\n\t\tel.style.setProperty(style, value, important ? 'important' : '');\n\t}\n\n\tpublic removeStyle<T extends HTMLElement>(el: T, style: string) {\n\t\tel.style.removeProperty(style);\n\t}\n\n\tpublic setAttribute<T extends HTMLElement>(el: T, name: string, value: string) {\n\t\tel.setAttribute(name, value);\n\t}\n\n\tpublic removeAttribute<T extends HTMLElement>(el: T, name: string) {\n\t\tel.removeAttribute(name);\n\t}\n\n\tpublic setProperty<T extends HTMLElement, U extends Exclude<WritableKeysOf<T>, number | symbol>>(el: T, name: U, value: any) {\n\t\tel[name] = value;\n\t}\n\n\tpublic setValue<T extends HTMLElement>(node: T, value: string) {\n\t\tnode.nodeValue = value;\n\t}\n\n\tpublic parentNode(node: HTMLElement) {\n\t\treturn node.parentNode;\n\t}\n\n\tpublic nextSibling(node: HTMLElement) {\n\t\treturn node.nextSibling;\n\t}\n\n\tpublic selectRootElement(selectorOrNode: string | HTMLElement, preserveContent = false): HTMLElement {\n\t\tconst el: HTMLElement | null = typeof selectorOrNode === 'string'\n\t\t\t? document.querySelector(selectorOrNode)\n\t\t\t: selectorOrNode;\n\n\t\tif (el == null) {\n\t\t\tthrow new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n\t\t}\n\n\t\tif (preserveContent === false) {\n\t\t\tel.textContent = '';\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tpublic listen<T extends keyof GlobalEventHandlersEventMap>(\n\t\ttarget: HTMLElement,\n\t\teventName: T,\n\t\tcallback: (event: GlobalEventHandlersEventMap[T]) => boolean | undefined,\n\t) {\n\t\ttarget.addEventListener(eventName, callback);\n\t\treturn () => target.removeEventListener(eventName, callback);\n\t}\n}\n","import { NgInputController, NgInputOptions } from './shared';\n\nconst DEFAULT_MAX_HEIGHT = 9e4;\n\nclass TextBoxController extends NgInputController {\n\tpublic $element: HTMLTextAreaElement;\n\tpublic $mirror = document.createElement('textarea');\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.$mirror.setAttribute('aria-hidden', 'true');\n\t\tthis.$mirror.setAttribute('aria-label', 'Hidden TextArea');\n\t\tthis.$mirror.setAttribute('tabindex', '-1');\n\n\t\tthis.$mirror.style.setProperty('position', 'absolute');\n\t\tthis.$mirror.style.setProperty('top', '-999px');\n\t\tthis.$mirror.style.setProperty('right', 'auto');\n\t\tthis.$mirror.style.setProperty('bottom', 'auto');\n\t\tthis.$mirror.style.setProperty('left', '0');\n\t\tthis.$mirror.style.setProperty('overflow', 'hidden');\n\t\tthis.$mirror.style.setProperty('box-sizing', 'content-box');\n\t\tthis.$mirror.style.setProperty('min-height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('height', '0', 'important');\n\t\tthis.$mirror.style.setProperty('padding', '0');\n\t\tthis.$mirror.style.setProperty('word-wrap', 'break-word');\n\t\tthis.$mirror.style.setProperty('border', '0');\n\n\t\t// append mirror to the DOM\n\t\tdocument.body.appendChild(this.$mirror);\n\t}\n\n\tpublic $onInit() {\n\t\t// the query *must* return an element or nothing we've done so far matters\n\t\tconst element = this.$element.querySelector('textarea') as HTMLTextAreaElement;\n\t\tlet computedStyle = window.getComputedStyle(element);\n\n\t\tconst boxOuter = {\n\t\t\twidth:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-right-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-right'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-left'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-left-width'), 10),\n\t\t\theight:\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-top-width'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-top'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('padding-bottom'), 10) +\n\t\t\t\tparseInt(computedStyle.getPropertyValue('border-bottom-width'), 10),\n\t\t};\n\n\t\tconst minHeightValue = parseInt(computedStyle.getPropertyValue('min-height'), 10);\n\t\tconst heightValue = parseInt(computedStyle.getPropertyValue('height'), 10);\n\t\tconst minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height;\n\n\t\t// opera returns max-height of -1 if not set\n\t\tlet maxHeight = parseInt(computedStyle.getPropertyValue('max-height'), 10);\n\t\tmaxHeight = maxHeight && maxHeight > 0 ? maxHeight : DEFAULT_MAX_HEIGHT;\n\n\t\t// set resize and apply elastic\n\t\telement.style.setProperty('resize', 'none');\n\n\t\tconst mirror = this.$mirror;\n\t\tfunction adjust() {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tcomputedStyle = window.getComputedStyle(element);\n\n\t\t\t\tconst width = `${parseInt(computedStyle.getPropertyValue('width'), 10) - boxOuter.width}px`;\n\t\t\t\tmirror.style.setProperty('width', width);\n\t\t\t\tmirror.style.setProperty('overflow-y', computedStyle.getPropertyValue('overflow-y'));\n\n\t\t\t\tmirror.value = element.value;\n\n\t\t\t\tlet { scrollHeight } = mirror;\n\t\t\t\tlet overflow = 'hidden';\n\n\t\t\t\tif (scrollHeight > maxHeight) {\n\t\t\t\t\tscrollHeight = maxHeight;\n\t\t\t\t\toverflow = 'scroll';\n\t\t\t\t} else if (scrollHeight < minHeight) {\n\t\t\t\t\tscrollHeight = minHeight;\n\t\t\t\t}\n\n\t\t\t\telement.style.setProperty('overflow-y', overflow);\n\n\t\t\t\tscrollHeight += boxOuter.height;\n\t\t\t\tif (parseInt(computedStyle.getPropertyValue('height'), 10) !== scrollHeight) {\n\t\t\t\t\telement.style.setProperty('height', `${scrollHeight}px`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\twindow.addEventListener('resize', adjust);\n\t\telement.addEventListener('keydown', adjust);\n\n\t\tthis.$scope.$on('$destroy', () => {\n\t\t\tif (this.isIE11) {\n\t\t\t\t(this.$mirror as any).removeNode(true);\n\t\t\t} else {\n\t\t\t\tthis.$mirror.remove();\n\t\t\t}\n\t\t\twindow.removeEventListener('resize', adjust);\n\t\t\telement.removeEventListener('keydown', adjust);\n\t\t});\n\n\t\t// copy the essential styles from the textarea to the mirror\n\t\tconst styles = [\n\t\t\t'font-family',\n\t\t\t'font-size',\n\t\t\t'font-weight',\n\t\t\t'font-style',\n\t\t\t'letter-spacing',\n\t\t\t'line-height',\n\t\t\t'text-transform',\n\t\t\t'word-spacing',\n\t\t\t'text-indent',\n\t\t\t'white-space',\n\t\t];\n\n\t\tfor (const style of styles) {\n\t\t\tthis.$mirror.style.setProperty(style, computedStyle.getPropertyValue(style));\n\t\t}\n\t}\n}\n\nexport const textBox: NgInputOptions = {\n\ttype: 'input',\n\tattrs: { maxlength: 3000, placeholder: '' },\n\trender(h) {\n\t\tconst textArea = h.createTextArea();\n\n\t\ttextArea.style.setProperty('overflow', 'hidden');\n\t\ttextArea.style.setProperty('overflow-y', 'hidden');\n\t\ttextArea.style.setProperty('word-wrap', 'break-word');\n\n\t\treturn textArea;\n\t},\n\tcontroller: TextBoxController,\n};\n","import Fuse from 'fuse.js';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { NgInputController, NgInputOptions } from './shared';\nimport { NgAttributes } from '../attributes';\nimport { NgService } from '../service';\n\nclass SelectController extends NgInputController {\n\tpublic static readonly SinglePlaceholder = '----Select One----';\n\tpublic static readonly MultiplePlaceholder = '----Select All That Apply----';\n\n\tpublic static IsMultiple($attrs: NgAttributes) {\n\t\treturn $attrs.hasOwnProperty('multiple') || $attrs.type === 'multiple';\n\t}\n\n\tpublic static GetPlaceholder($attrs: NgAttributes) {\n\t\treturn $attrs.placeholder ||\n\t\t\tSelectController.IsMultiple($attrs)\n\t\t\t? SelectController.MultiplePlaceholder\n\t\t\t: SelectController.SinglePlaceholder;\n\t}\n\n\tprotected isListOpen = false;\n\tprotected list: any[];\n\tprotected searchList: any[];\n\n\t// tslint:disable:variable-name\n\tprivate _text: string;\n\tprivate _value: string;\n\t// tslint:enable:variable-name\n\n\tpublic get text() {\n\t\tif (typeof this._text !== 'string') {\n\t\t\tconst { text = 'Text' } = this.$attrs;\n\t\t\tthis._text = text;\n\t\t}\n\t\treturn this._text;\n\t}\n\n\tpublic get value() {\n\t\tif (typeof this._value !== 'string') {\n\t\t\tconst { value = 'Value' } = this.$attrs;\n\t\t\tthis._value = value;\n\t\t}\n\t\treturn this._value;\n\t}\n\n\tprivate destroyCurrentWatcher: () => void;\n\n\tprivate get isMultiple() {\n\t\treturn SelectController.IsMultiple(this.$attrs);\n\t}\n\n\tpublic $onInit() {\n\t\tif (this.isMobile) {\n\t\t\tthis.searchList = this.list;\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = this.$element.querySelector('.select-container') as HTMLDivElement;\n\t\tconst dropdown = this.$element.querySelector('.select-dropdown') as HTMLDivElement;\n\t\tconst dropdownlist = this.$element.querySelector('.select-dropdown-list') as HTMLDivElement;\n\t\tconst input = this.$element.querySelector('input') as HTMLInputElement;\n\n\t\tconst updateSearchList = () => {\n\t\t\tif (input.value) {\n\t\t\t\tthis.searchList = this.getSearchList(fuzzer.search(input.value));\n\t\t\t} else {\n\t\t\t\tthis.searchList = cloneDeep(this.list);\n\t\t\t}\n\t\t\tthis.$scope.$applyAsync();\n\t\t};\n\n\t\tinput.oninput = () => {\n\t\t\tupdateSearchList();\n\t\t};\n\n\t\tinput.onblur = e => {\n\t\t\tif (e.relatedTarget == null) {\n\t\t\t\tinput.hidden = true;\n\t\t\t\tdropdownlist.hidden = true;\n\t\t\t\tdropdown.classList.remove('border-top-0');\n\t\t\t\tdropdown.classList.remove('border-bottom-0');\n\t\t\t}\n\t\t};\n\n\t\tcontainer.onclick = e => {\n\t\t\tif (e.target instanceof HTMLSelectElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (e.target instanceof HTMLButtonElement) {\n\t\t\t\tinput.hidden = false;\n\t\t\t}\n\n\t\t\tinput.hidden = !input.hidden;\n\t\t\tdropdown.classList.toggle('border-top-0', input.hidden);\n\t\t\tdropdown.classList.toggle('border-bottom-0', input.hidden);\n\n\t\t\tif (!input.hidden) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\n\t\t\tdropdownlist.hidden = input.hidden;\n\t\t};\n\n\t\tdropdownlist.onclick = e => {\n\t\t\tlet { target } = e as unknown as { target: HTMLElement };\n\t\t\tif (target.nodeName === '#text') {\n\t\t\t\ttarget = target.parentElement as HTMLElement;\n\t\t\t}\n\n\t\t\tconst targetIsItem =\n\t\t\t\ttarget instanceof HTMLDivElement &&\n\t\t\t\ttarget.classList.contains('select-item') &&\n\t\t\t\ttarget.parentElement instanceof HTMLDivElement &&\n\t\t\t\ttarget.parentElement.classList.contains('select-dropdown-list');\n\n\t\t\tif (targetIsItem) {\n\t\t\t\tinput.value = '';\n\t\t\t\tthis.select(target.dataset.value);\n\t\t\t}\n\t\t};\n\n\t\tlet fuzzer: Fuse<any, any>;\n\t\tthis.$scope.$watchCollection(\n\t\t\t() => this.list,\n\t\t\t_ => {\n\t\t\t\tfuzzer = new Fuse(_, {\n\t\t\t\t\tshouldSort: true,\n\t\t\t\t\tthreshold: 0.3,\n\t\t\t\t\tlocation: 0,\n\t\t\t\t\tdistance: 100,\n\t\t\t\t\tmaxPatternLength: 32,\n\t\t\t\t\tminMatchCharLength: 1,\n\t\t\t\t\tkeys: [this.text],\n\t\t\t\t});\n\n\t\t\t\tupdateSearchList();\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic $onDestroy() {\n\t\tif (typeof this.destroyCurrentWatcher === 'function') {\n\t\t\tthis.destroyCurrentWatcher();\n\t\t}\n\t}\n\n\tpublic getDisplayText(value: any) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn SelectController.GetPlaceholder(this.$attrs);\n\t\t}\n\n\t\t// tslint:disable-next-line:triple-equals\n\t\tconst item = this.list.find(x => x[this.value] == value);\n\t\treturn item == null ? this.clear() : item[this.text];\n\t}\n\n\tpublic remove(item: any) {\n\t\t// tslint:disable-next-line:triple-equals\n\t\tthis.ngModel = this.ngModel.filter((x: any) => x != item);\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic clear() {\n\t\tif (this.isMultiple ? Array.isArray(this.ngModel) && this.ngModel.length > 0 : this.ngModel !== undefined) {\n\t\t\tthis.ngModel = this.isMultiple ? [] : undefined;\n\t\t}\n\t\tthis.searchList = this.getSearchList(this.list);\n\t}\n\n\tpublic select(value: any) {\n\t\tif (this.isMultiple) {\n\t\t\tthis.ngModel = Array.isArray(this.ngModel)\n\t\t\t\t? this.ngModel.includes(value)\n\t\t\t\t\t? this.ngModel\n\t\t\t\t\t: this.ngModel.concat(value)\n\t\t\t\t: [value];\n\t\t} else {\n\t\t\tthis.ngModel = value;\n\t\t}\n\n\t\tthis.searchList = this.getSearchList(this.list);\n\t\tthis.$scope.$applyAsync();\n\t}\n\n\tprivate getSearchList(list: any[]) {\n\t\t// tslint:disable:triple-equals\n\t\treturn Array.isArray(this.ngModel)\n\t\t\t? list.filter(x => this.ngModel.every((y: any) => x[this.value] != y))\n\t\t\t: this.ngModel == null\n\t\t\t\t? cloneDeep(list)\n\t\t\t\t: list.filter(x => x[this.value] != this.ngModel);\n\t\t// tslint:enable:triple-equals\n\t}\n}\n\nexport const selectList: NgInputOptions = {\n\ttype: 'input',\n\trender(h) {\n\t\tconst select = h.createHtmlElement(\n\t\t\t'select',\n\t\t\t['form-control', 'select-input', 'd-none'],\n\t\t\t[\n\t\t\t\t['ng-attr-name', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-attr-id', '{{id}}_{{$ctrl.uniqueId}}'],\n\t\t\t\t['ng-model', '$ctrl.ngModel'],\n\t\t\t],\n\t\t);\n\n\t\tconst isMultiple = SelectController.IsMultiple(this.$attrs);\n\t\tif (isMultiple) {\n\t\t\tselect.setAttribute('multiple', 'true');\n\t\t} else {\n\t\t\tconst placeholder = h.createHtmlElement('option');\n\n\t\t\tplaceholder.setAttribute('placeholder', 'true');\n\t\t\tplaceholder.text = SelectController.GetPlaceholder(this.$attrs);\n\t\t\tplaceholder.value = '';\n\n\t\t\tselect.appendChild(placeholder);\n\t\t}\n\n\t\tif (NgService.IsMobile()) {\n\t\t\tselect.classList.remove('d-none');\n\t\t\tselect.setAttribute(\n\t\t\t\t'ng-options',\n\t\t\t\t'item[\\'{{$ctrl.value}}\\'] as item[\\'{{$ctrl.text}}\\'] for item in $ctrl.searchList track by $index',\n\t\t\t);\n\t\t\treturn select;\n\t\t}\n\n\t\tconst inner = h.createHtmlElement('div', ['select-inner-container']);\n\t\tconst innerlist = h.createHtmlElement('div', ['select-list', isMultiple ? 'multiple' : 'single']);\n\t\tconst selected = h.createHtmlElement('div', ['select-item']);\n\n\t\tconst btn = h.createHtmlElement('button', ['select-button'],\n\t\t\t[\n\t\t\t\t['ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText($ctrl.ngModel)}}\\''],\n\t\t\t\t['ng-click', '$ctrl.clear()'],\n\t\t\t],\n\t\t);\n\n\t\tif (isMultiple) {\n\t\t\tconst sbtn = btn.cloneNode() as HTMLButtonElement;\n\t\t\tsbtn.setAttribute('ng-attr-aria-label', 'Remove item: \\'{{$ctrl.getDisplayText(item)}}\\'');\n\t\t\tsbtn.setAttribute('ng-click', '$ctrl.remove(item)');\n\n\t\t\tselected.setAttribute('ng-repeat', 'item in $ctrl.ngModel track by $index');\n\t\t\tselected.setAttribute('aria-selected', 'true');\n\t\t\tselected.innerHTML = `{{$ctrl.getDisplayText(item)}}${sbtn.outerHTML}`;\n\n\t\t\tconst placeholder = h.createHtmlElement('div', ['select-item', 'placeholder'], [['ng-if', '$ctrl.ngModel == null || $ctrl.ngModel.length === 0']]);\n\t\t\tplaceholder.innerText = SelectController.GetPlaceholder(this.$attrs);\n\n\t\t\tinnerlist.appendChild(placeholder);\n\t\t} else {\n\t\t\tselected.setAttribute('ng-class', '{ \\'placeholder\\': $ctrl.ngModel == null }');\n\t\t\tselected.innerText = '{{$ctrl.getDisplayText($ctrl.ngModel)}}';\n\t\t}\n\n\t\tconst item = h.createHtmlElement('div', ['select-item'],\n\t\t\t[\n\t\t\t\t['ng-repeat', 'item in $ctrl.searchList track by $index'],\n\t\t\t\t['ng-attr-data-value', '{{item[$ctrl.value]}}'],\n\t\t\t\t['role', 'option'],\n\t\t\t],\n\t\t);\n\t\titem.innerText = '{{item[$ctrl.text]}}';\n\n\t\tconst list = h.createHtmlElement('div', ['select-dropdown-list'],\n\t\t\t[\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['role', 'listbox'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst input = h.createHtmlElement('input', ['select-input'],\n\t\t\t[\n\t\t\t\t['type', 'text'],\n\t\t\t\t['autocomplete', 'off'],\n\t\t\t\t['autocapitalize', 'off'],\n\t\t\t\t['spellcheck', 'false'],\n\t\t\t\t['role', 'textbox'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['placeholder', ''],\n\t\t\t\t['aria-label', 'Select List'],\n\t\t\t\t['hidden', 'true'],\n\t\t\t],\n\t\t);\n\n\t\tconst type = `select-${isMultiple ? 'multiple' : 'one'}`;\n\t\tconst container = h.createHtmlElement('div', ['select-container'],\n\t\t\t[\n\t\t\t\t['data-type', type],\n\t\t\t\t['role', 'combobox'],\n\t\t\t\t['tabindex', '0'],\n\t\t\t\t['aria-autocomplete', 'list'],\n\t\t\t\t['aria-haspopup', 'true'],\n\t\t\t\t['aria-expanded', 'false'],\n\t\t\t\t['dir', 'ltr'],\n\t\t\t\t['ng-attr-name', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t\t['ng-attr-id', `${type}_{{$ctrl.uniqueId}}`],\n\t\t\t],\n\t\t);\n\n\t\tconst dropdown = h.createHtmlElement('div', ['select-dropdown', 'border-bottom-0', 'border-top-0'], [['aria-expanded', 'false']]);\n\n\t\tinnerlist.appendChild(selected);\n\t\tinnerlist.appendChild(btn);\n\t\tinner.appendChild(select);\n\t\tinner.appendChild(innerlist);\n\n\t\tlist.appendChild(item);\n\n\t\tdropdown.appendChild(input);\n\t\tdropdown.appendChild(list);\n\n\t\tcontainer.appendChild(inner);\n\t\tcontainer.appendChild(dropdown);\n\n\t\treturn container;\n\t},\n\tcontroller: SelectController,\n\tbindings: {\n\t\tlist: '<',\n\t},\n};\n","import { HttpStatusCode } from '@ledge/types/http';\n\nimport { NgApp } from './src/app';\nimport { inputs } from './src/inputs';\nimport { misc } from './src/misc';\n\n// @ts-ignore\nimport ngAnimate from 'angular-animate';\n// @ts-ignore\nimport ngMessages from 'angular-messages';\nimport uirouter from '@uirouter/angularjs';\n\nexport const app = new NgApp()\n\t.addComponents(inputs)\n\t.addComponents(misc)\n\t.addDependencies([\n\t\tngAnimate,\n\t\tngMessages,\n\t\tuirouter,\n\t])\n\t.addHttpInterceptor({\n\t\tasync responseError(response, err) {\n\t\t\tconst { status, statusText, url } = response;\n\t\t\tconst data = await response.json();\n\n\t\t\tswitch (status) {\n\t\t\t\tcase HttpStatusCode.NotFound:\n\t\t\t\t\tapp.log.error(`Route '${url}' not found`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.BadRequest:\n\t\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t\tapp.log.error(data);\n\t\t\t\t\t} else if (data != null && data.toString() === '[object Object]') {\n\t\t\t\t\t\tapp.log.error(Object.keys(data).map(x => `${x}: ${data[x]}`).join('\\n\\n'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase HttpStatusCode.Unauthorized:\n\t\t\t\tcase HttpStatusCode.Forbidden:\n\t\t\t\tcase HttpStatusCode.InternalServerError:\n\t\t\t\t\tapp.log.warning(statusText);\n\t\t\t\t\tbreak;\n\t\t\t\tcase -1:\n\t\t\t\t\tapp.log.warning('Server timed out.');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tapp.log.error(`The request to '${url}' returned an error (code: ${status})`);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn err;\n\t\t},\n\t});\n\nexport * from './src/app';\nexport * from './src/attributes';\nexport * from './src/controller';\nexport * from './src/http';\nexport * from './src/logger';\nexport * from './src/modal';\nexport * from './src/ng';\nexport * from './src/options';\nexport * from './src/renderer';\nexport * from './src/router';\nexport * from './src/service';\n\nexport * from './src/inputs';\nexport * from './src/misc';\n","import { isIE11 } from '@ledge/is-ie-11';\nimport { isMobile } from '@ledge/is-mobile';\n\nexport class NgService {\n\tpublic static IsMobile() {\n\t\treturn isMobile();\n\t}\n\n\tpublic static IsIE11() {\n\t\treturn isIE11();\n\t}\n\n\t/**\n\t * @see https://stackoverflow.com/a/2117523\n\t */\n\tpublic static UUIDv4() {\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n\t\t\t// tslint:disable:no-bitwise no-magic-numbers\n\t\t\tconst r = Math.random() * 16 | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3 | 0x8);\n\t\t\t// tslint:enable:no-bitwise no-magic-numbers\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\tpublic readonly uniqueId = this.UUIDv4().replace(/[-]|[,]/g, '');\n\n\tpublic UUIDv4() {\n\t\treturn NgService.UUIDv4();\n\t}\n\n\tprotected get isMobile() {\n\t\treturn isMobile();\n\t}\n\n\tprotected get isIE11() {\n\t\treturn NgService.IsIE11();\n\t}\n\n\t/**\n\t * Separates words in a string by capital letters. Also capitalizes the first letter.\n\t *\n\t * The following exceptions apply:\n\t * 1) If string is all-caps, it's returned as-is\n\t * 2) Any embedded acronyms (such as F.A.Q.) are returned as-is\n\t * 3) Consecutive capital letters are returned as-is\n\t * 3) Hyphenated words retain concatenation\n\t *\n\t * @param item - The string value to be split\n\t */\n\tpublic splitByCapitalLetter(item: string) {\n\t\tconst split = item.split(/(?=[A-Z])/);\n\t\treturn split.every(x => x.length === 1)\n\t\t\t? item\n\t\t\t: split\n\t\t\t\t\t.map(x => x.trim())\n\t\t\t\t\t.map(x =>\n\t\t\t\t\t\t// tslint:disable-next-line: no-magic-numbers\n\t\t\t\t\t\tx.length === 1 || (x.length === 2 && x.charAt(1) === '.')\n\t\t\t\t\t\t\t// tslint:disable-next-line: prefer-template\n\t\t\t\t\t\t\t? (x.toUpperCase() + '\\uFFFF')\n\t\t\t\t\t\t\t: (x.charAt(0).toUpperCase() + x.substring(1)),\n\t\t\t\t\t)\n\t\t\t\t\t.join(' ')\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\w{1}\\.?(\\uFFFF){1}\\s?/g,\n\t\t\t\t\t\t([first, second]) =>\n\t\t\t\t\t\t\tsecond === '.'\n\t\t\t\t\t\t\t\t? first + second\n\t\t\t\t\t\t\t\t: first,\n\t\t\t\t\t)\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/\\.{1}\\w{2,}/g,\n\t\t\t\t\t\t([first, second, ...rest]) =>\n\t\t\t\t\t\t\t`${first} ${second.toUpperCase()}${rest.join('')}`,\n\t\t\t\t\t)\n\t\t\t\t\t.replace(/- /g, '-');\n\t}\n}\n","import { injector } from 'angular';\n\nexport type NgInjector = ReturnType<typeof injector>;\nexport type NgScope = angular.IScope;\n\nexport { injector };\nexport { bootstrap, module } from 'angular';\n","import { Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\n\nimport { NgAttributes } from './attributes';\nimport { NgHttp } from './http';\nimport { NgLogger } from './logger';\nimport { NgService } from './service';\nimport { NgInjector, NgScope } from './ng';\nimport { NgAppConfig } from './options';\nimport { NgRenderer } from './renderer';\nimport { NgStateService } from './router';\n\nexport class NgController extends NgService {\n\tpublic readonly $scope: NgScope;\n\tpublic readonly $attrs: NgAttributes;\n\tpublic readonly $injector: NgInjector;\n\n\tpublic readonly $config: NgAppConfig;\n\tpublic readonly $log: NgLogger;\n\tpublic readonly $http: NgHttp;\n\tpublic readonly $state: NgStateService;\n\tpublic readonly $renderer: NgRenderer;\n\tpublic readonly $element: HTMLElement;\n\n\tpublic readonly isProduction: boolean;\n\tpublic readonly isDevelopment: boolean;\n\tpublic readonly isStaging: boolean;\n\tpublic readonly apiPrefix: string;\n\n\tpublic openWebAddress(address: string) {\n\t\tthis.$log.confirm(`You are being sent to ${address}. Continue?`).then(() => window.open(`http://${address}`));\n\t}\n\n\t/**\n\t * Called on each controller after all the controllers on an element have been constructed and had their bindings\n\t * initialized (and before the pre & post linking functions for the directives on this element). This is a good\n\t * place to put initialization code for your controller.\n\t */\n\tpublic $onInit?(): void;\n\n\t/**\n\t * Called on each turn of the digest cycle. Provides an opportunity to detect and act on changes.\n\t * Any actions that you wish to take in response to the changes that you detect must be invoked from this hook;\n\t * implementing this has no effect on when `$onChanges` is called. For example, this hook could be useful if you wish\n\t * to perform a deep equality check, or to check a `Date` object, changes to which would not be detected by Angular's\n\t * change detector and thus not trigger `$onChanges`. This hook is invoked with no arguments; if detecting changes,\n\t * you must store the previous value(s) for comparison to the current values.\n\t */\n\tpublic $doCheck?(): void;\n\n\t/**\n\t * Called whenever one-way bindings are updated. The onChangesObj is a hash whose keys are the names of the bound\n\t * properties that have changed, and the values are an object of the form { currentValue, previousValue, isFirstChange() }.\n\t * Use this hook to trigger updates within a component such as cloning the bound value to prevent accidental mutation of the outer value.\n\t */\n\tpublic $onChanges?<T = any>(onChangesObj: {\n\t\t[property: string]: {\n\t\t\tcurrentValue: T;\n\t\t\tpreviousValue: T;\n\t\t\tisFirstChange(): boolean;\n\t\t},\n\t}): void;\n\n\t/**\n\t * Called on a controller when its containing scope is destroyed. Use this hook for releasing external resources,\n\t * watches and event handlers.\n\t */\n\tpublic $onDestroy?(): void;\n\n\t/**\n\t * Called after this controller's element and its children have been linked. Similar to the post-link function this\n\t * hook can be used to set up DOM event handlers and do direct DOM manipulation. Note that child elements that contain\n\t * templateUrl directives will not have been compiled and linked since they are waiting for their template to load\n\t * asynchronously and their own compilation and linking has been suspended until that occurs. This hook can be considered\n\t * analogous to the ngAfterViewInit and ngAfterContentInit hooks in Angular 2. Since the compilation process is rather\n\t * different in Angular 1 there is no direct mapping and care should be taken when upgrading.\n\t */\n\tpublic $postLink?(): void;\n}\n\nexport function makeInjectableCtrl<T extends NgController>(ctrl: new () => T, locals: {\n\tlog: NgLogger,\n\thttp: NgHttp,\n\trenderer: NgRenderer,\n\tattrs?: Indexed,\n\tconfig(): NgAppConfig;\n}) {\n\tautobind(ctrl);\n\treturn class InternalController extends (ctrl as new () => any) {\n\t\tpublic $log = locals.log;\n\t\tpublic $http = locals.http;\n\t\tpublic $renderer = locals.renderer;\n\t\tpublic $state: NgStateService;\n\t\tpublic $attrs: NgAttributes;\n\t\tpublic $element: HTMLElement;\n\n\t\tpublic get $config() {\n\t\t\treturn locals.config();\n\t\t}\n\t\tpublic get isProduction() {\n\t\t\treturn this.$config.IS_PROD;\n\t\t}\n\t\tpublic get isDevelopment() {\n\t\t\treturn this.$config.IS_DEV;\n\t\t}\n\t\tpublic get isStaging() {\n\t\t\treturn this.$config.IS_STAGING;\n\t\t}\n\t\tpublic get apiPrefix() {\n\t\t\treturn this.$config.API_HOST;\n\t\t}\n\n\t\tconstructor(\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\tpublic $scope: NgScope,\n\t\t\tpublic $injector: NgInjector,\n\t\t) {\n\t\t\tsuper();\n\n\t\t\tthis.$element = $element[0];\n\t\t\tthis.$attrs = new NgAttributes(this.$element, locals.attrs);\n\t\t\tthis.$state = this.$injector.get('$state');\n\t\t}\n\t} as new (\n\t\t\t$element: { [i: number]: HTMLElement },\n\t\t\t$scope: NgScope,\n\t\t\t$injector: NgInjector,\n\t\t) => T;\n}\n","import { IConfig, Indexed } from '@ledge/types';\nimport { autobind } from 'core-decorators';\nimport { NgController, makeInjectableCtrl } from './controller';\nimport { NgAttributes } from './attributes';\n\n@autobind\nexport class NgAppConfig implements IConfig {\n\tpublic readonly IS_PROD: boolean;\n\tpublic readonly IS_DEV: boolean;\n\tpublic readonly IS_STAGING: boolean;\n\n\t/**\n\t * The name of the library or application.\n\t */\n\tpublic readonly NAME: string;\n\n\t/**\n\t * The current library or application version, either as a string (e.g. 1.0.0 or v1) or as a number (e.g. 1 or 2.3)\n\t */\n\tpublic readonly VERSION: string | number;\n\n\t/**\n\t * The host environment for the library or application.\n\t */\n\tpublic readonly ENV: string;\n\n\t/**\n\t * The hostname for the API\n\t */\n\tpublic readonly API_HOST: string;\n\n\tconstructor({\n\t\tNAME = 'ng-app',\n\t\tENV = '',\n\t\tAPI_HOST = '',\n\t}: Partial<NgAppConfig> = { }) {\n\t\tif (ENV == null || ENV.length === 0) {\n\t\t\tENV = process.env.NODE_ENV as string;\n\t\t}\n\t\tthis.ENV = ENV;\n\n\t\tthis.IS_PROD = ENV === 'production';\n\t\tthis.IS_DEV = ENV === 'development';\n\t\tthis.IS_STAGING = ENV === 'staging';\n\n\t\tthis.NAME = NAME;\n\t\tthis.API_HOST = API_HOST;\n\t}\n}\n\n/**\n * Component definition object (a simplified directive definition object)\n */\nexport interface NgComponentOptions<T = typeof NgController> {\n\t/**\n\t * Controller constructor function that should be associated with newly created scope or the name of a registered\n\t * controller if passed as a string. Empty function by default.\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\tcontroller?: T | ['$element', '$scope', '$injector', ReturnType<typeof makeInjectableCtrl>];\n\n\t/**\n\t * @deprecated For consistency this will always be the historical default `$ctrl`. ng-app's architecture ensures all scopes are isolates, so there's no risk of scope leakage.\n\t *\n\t * An identifier name for a reference to the controller. If present, the controller will be published to its scope under\n\t * the specified name. If not present, this will default to `$ctrl`.\n\t */\n\tcontrollerAs?: never;\n\n\t/**\n\t * html template as a string or a function that returns an html template as a string which should be used as the\n\t * contents of this component. Empty string by default.\n\t * If template is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplate?: string | (() => string) | (string | (($element: [HTMLElement], $attrs: NgAttributes) => string))[];\n\n\t/**\n\t * Path or function that returns a path to an html template that should be used as the contents of this component.\n\t * If templateUrl is a function, then it is injected with the following locals:\n\t * $element - Current element\n\t * $attrs - Current attributes object for the element\n\t * Use the array form to define dependencies (necessary if strictDi is enabled and you require dependency injection)\n\t */\n\ttemplateUrl?: never;\n\n\t/**\n\t * Define DOM attribute binding to component properties. Component properties are always bound to the component\n\t * controller and not to the scope.\n\t */\n\tbindings?: Indexed<string>;\n\n\t/**\n\t * Whether transclusion is enabled. Disabled by default.\n\t */\n\ttransclude?: boolean | Indexed<string>;\n\n\t/**\n\t * Requires the controllers of other directives and binds them to this component's controller.\n\t * The object keys specify the property names under which the required controllers (object values) will be bound.\n\t * Note that the required controllers will not be available during the instantiation of the controller,\n\t * but they are guaranteed to be available just before the $onInit method is executed!\n\t */\n\trequire?: Indexed<string>;\n}\n"],"sourceRoot":""}